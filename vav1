-- credits to vision!#1684

repeat wait(1 / 60) until game:IsLoaded()
if not isfile("VAprefix.lua") then 
	writefile("VAprefix.lua", ";")
end
if game.PlaceId == 417267366 then
	coroutine.wrap(function()
		wait(.5)
		game.Players.LocalPlayer.PlayerGui.ScreenGui:Destroy()
	end)()
end
local success, response = pcall(function()
local Admin = {
	Prefix = readfile("VAprefix.lua"),
	Name = "volant private admin",
	Version = "v1"
}

-- >> Nord: Notifications by anarchy#7132 | 866513178632126464
-- >> Discord: https://discord.gg/GbgtPjwbQe
_G.Config = { ["Theme"] = "Dark" }
local Nord = loadstring(game:HttpGetAsync("https://scripts.nord.vip/NordNotifs.lua", true))();
Nord:Notify("Volant Admin", "Welcome", "success", 4);


function DeltaWait(n)
    local now = tick()
    n = n or 0
    repeat game:GetService("RunService").Heartbeat:Wait()
    until tick()-now >= n
    return tick()-now
end

function tablefind(tab,el)
    for index, value in pairs(tab) do
        if value == el then
            return index
        end
    end
end

function createWatermark(watermarkText)
	local date_table = os.date("*t")


	local monthTable = {
		"January",
		"February",
		"March",
		"April",
		"May",
		"June",
		"July",
		"August",
		"September",
		"October",
		"November",
		"December"

	}
    local ScreenSize = workspace.Camera.ViewportSize
    local main = Instance.new("ScreenGui")
    local mainFrame = Instance.new("Frame")
    local gradient = Instance.new("UIGradient")
	local watermark = Instance.new("TextLabel")

    main.Parent = game.CoreGui
    main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    main.IgnoreGuiInset = true

    mainFrame.Name = "mainFrame"
    mainFrame.Parent = main
    mainFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
    mainFrame.BorderSizePixel = 1
    mainFrame.BorderColor3 = Color3.fromRGB(0.0,0)
    mainFrame.ClipsDescendants = false
    mainFrame.Size = UDim2.new(1,0,.006,0)
    mainFrame.Position = UDim2.new(0,0,0,0)

    gradient.Parent = mainFrame
    gradient.Transparency = NumberSequence.new{
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(.5, 0),
        NumberSequenceKeypoint.new(1, 0)
 
    }
    
	watermark['Name'] = "watermark"
	watermark['Parent'] = mainFrame
	watermark['BackgroundColor3'] = Color3.fromRGB(255,255,255)
	watermark['BackgroundTransparency'] = 1.000
	watermark['BorderSizePixel'] = 0
	watermark['Position'] = UDim2.new(0,0,3,0)
	watermark['Size'] = UDim2.new(1,1,1,1)
	watermark['Font'] = Enum['Font'].Code
	watermark.Text = Admin.Name.." "..Admin.Version .. " | "..game.Players.LocalPlayer.DisplayName.. " | "..monthTable[date_table.month].." "..date_table.day..", "..date_table.year
	watermark.TextColor3 = Color3.fromRGB(255,255,255)
	watermark.TextSize = 15.000
	watermark.TextXAlignment = Enum.TextXAlignment.Center
	watermark.TextWrapped = true
    watermark.TextStrokeTransparency = 0
    watermark.TextStrokeColor3 = Color3.fromRGB(0,0,0)
end
-- createWatermark()


local coreGui = game.CoreGui
local slideFrame = Instance.new("Frame")
local slideGui = Instance.new("ScreenGui")
local uil = Instance.new('UIListLayout')

slideGui.Parent = coreGui
slideGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

slideFrame.Parent = slideGui
slideFrame.BackgroundTransparency = 1
slideFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
slideFrame.BorderSizePixel = 0
slideFrame.ClipsDescendants = false
slideFrame.Size = UDim2.new(.5,0,.5,0)
slideFrame.Position = UDim2.new(0.008,0,0.48,0)
slideFrame.ClipsDescendants = true

uil.Parent = slideFrame
uil.VerticalAlignment = "Bottom"

function Tween(obj, dist, time)
    local tween = game:GetService("TweenService")
    local ti = TweenInfo.new(time, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    local tw = tween:Create(obj, ti, dist)
    tw:Play()
end

function Notify(Text,messageType)
    local notifText = Instance.new("TextLabel")
    local notifText2 = Instance.new("TextLabel")

    notifText.Parent = slideFrame
    notifText.BackgroundColor3 = Color3.fromRGB(255,255,255)
    notifText.BackgroundTransparency = 1
    notifText.BorderSizePixel = 0
    notifText.Position = UDim2.new(0,0,0,0)
    notifText.Size = UDim2.new(1,0,0.1,0)
    notifText.Font = Enum.Font.SciFi
    notifText.TextTransparency = 0
    if messageType == 'error' then
        notifText.Text = "[Error]: "..Text
        notifText.TextColor3 = Color3.fromRGB(255, 50, 50)
    else
        notifText.Text = ""..Text
        notifText.TextColor3 = Color3.fromRGB(255,255,255)
    end
    notifText.TextSize = 18.000
    notifText.TextXAlignment = Enum.TextXAlignment.Left
    notifText.TextWrapped = true
    notifText.TextStrokeTransparency = 0
    notifText.TextStrokeColor3 = Color3.fromRGB(0,0,0)
coroutine.wrap(function()
    wait(15)
    local Info = TweenInfo.new(1)
    local Tween = game:GetService("TweenService"):Create(notifText,Info,{TextTransparency=1})
    Tween:Play()
    local Info = TweenInfo.new(1)
    local Tween = game:GetService("TweenService"):Create(notifText,Info,{TextStrokeTransparency=1})
    Tween:Play()
    wait(1)
    notifText:Destroy()
end)()
end
local Message = function(MTitle,MText,Time)
    game:GetService("StarterGui"):SetCore("SendNotification",{Title = MTitle,Text = MText,Icon = "rbxassetid://2541869220",Duration = Time})
end
--//////////////////////////////////////////////////////////////////////////////////////////////////////
--//////////////////////////////////////////////////////////////////////////////////////////////////////
--Command bar
local ScreenSize = workspace.Camera.ViewportSize
local UICorner3 = Instance.new("UICorner")
Be = Instance.new('BlurEffect')
Be.Parent = game.Lighting
Be.Enabled = false
gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false
gui.Name = "Command Bar"
Main = Instance.new("Frame", gui)
Main.BackgroundTransparency = 1
Main.Name = "Main"
Main.AnchorPoint = Vector2.new(0.5,0,0.8,0)
Main.Position = UDim2.new(0.5,0,0.8,0)
Main.Size = UDim2.new(0, 0, 0, ScreenSize.Y/16)
Exec = Instance.new("TextBox", Main)
Exec.BackgroundTransparency = 0.4
Exec.BorderSizePixel = 0
UICorner3.Parent = Exec
Exec.BackgroundColor3 = Color3.new(0, 0, 0)
Exec.BorderColor3 = Color3.new(0, 0, 127)
Exec.Name = "Execute"
Exec.AnchorPoint = Vector2.new(0.5,0,0.8,0)
Exec.Size = UDim2.new(0, 0, 0, ScreenSize.Y/16)
Exec.Font = "Legacy"
Exec.TextSize = 14
Exec.Text = ""
Exec.TextColor3 = Color3.new(255, 255, 255)
Exec.TextStrokeColor3 = Color3.new(0, 0, 127)
Exec.TextStrokeTransparency = 1
Exec.TextWrapped = true
Exec.FocusLost:connect(function(enterPressed)
	Exec.Text = ""
	Exec:TweenSize(UDim2.new(0, 0, 0, ScreenSize.Y/16), Enum.EasingDirection.In, Enum.EasingStyle.Linear, .05)
	wait(.05)
	Be.Enabled = false
end)
function onKeyPress(actionName, userInputState, inputObject)
	Exec:TweenSize(UDim2.new(0, ScreenSize.X/8, 0, ScreenSize.Y/16), Enum.EasingDirection.In, Enum.EasingStyle.Linear, .05)
	wait(.05)
	Be.Enabled = true
	Exec.Text = ""
	Exec:CaptureFocus()
end
game.ContextActionService:BindAction("keyPress", onKeyPress, false, Enum.KeyCode.Semicolon)

function Chat(Message)
    wait(.2)
    game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Message,"All")
end

function DeltaWait(n)
    local now = tick()
    n = n or 0
    repeat game:GetService("RunService").Heartbeat:Wait()
    until tick()-now >= n
    return tick()-now
end

--Find player function
function findplr(args)
	if args == "me" then
		return LocalPlayer
	elseif args == "random" then 
		return game:GetService("Players"):GetPlayers()[math.random(1, #game:GetService("Players"):GetPlayers())]
	elseif args == "new" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.AccountAge < 30 and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "old" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.AccountAge > 30 and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "bacon" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "friend" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v:IsFriendsWith(LocalPlayer.UserId) and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "notfriend" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if not v:IsFriendsWith(LocalPlayer.UserId) and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "ally" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.Team == LocalPlayer.Team and v ~= LocalPlayer then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "enemy" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.Team ~= LocalPlayer.Team then
				vAges[#vAges + 1] = v
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "near" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v ~= LocalPlayer then
				local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
				if math < 30 then
					vAges[#vAges + 1] = v
				end
			end
		end
		return vAges[math.random(1, #vAges)]
	elseif args == "far" then
		local vAges = {} 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v ~= LocalPlayer then
				local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
				if math > 30 then
					vAges[#vAges + 1] = v
				end
			end
		end
		return vAges[math.random(1, #vAges)]
	else 
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if string.find(string.lower(v.Name), string.lower(args)) then
				return 
			end
		end
	end
end
--scd begins here
local mt = getrawmetatable(game)
local LocalPlayer = game.Players.LocalPlayer
local Character = game.Players.LocalPlayer.Character
local Workspace = game:GetService("Workspace")


local hum = game.Players.LocalPlayer.Character
local p = game:GetService("Players").LocalPlayer


--// functions


-- fly script here

-- The following code should be in a local script.
-- Only works on PC, not xbox or mobile. I do not have devices to test on.
-- Call the start fly function AFTER the character exists to fly. The function does not run if there is no character.

local speed = 50 -- This is the fly speed. Change it to whatever you like. The variable can be changed while running

local c
local h
local bv
local bav
local cam
local flying
local p = game.Players.LocalPlayer
local buttons = {
	W = false,
	S = false,
	A = false,
	D = false,
	Moving = false
}

local yesfly = function () -- Call this function to begin flying
	if not p.Character or not p.Character.Head or flying then
		return
	end
	
	c = p.Character
	h = c.Humanoid
	h.PlatformStand = true
	cam = workspace:WaitForChild('Camera')
	bv = Instance.new("BodyVelocity")
	bav = Instance.new("BodyAngularVelocity")
	bv.Velocity, bv.MaxForce, bv.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000
	bav.AngularVelocity, bav.MaxTorque, bav.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000
	bv.Parent = c.Head
	bav.Parent = c.Head
	flying = true
	h.Died:connect(function()
		flying = false
	end)
end

local nofly = function () -- Call this function to stop flying
	if not p.Character or not flying then
		return
	end
	h.PlatformStand = false
	bv:Destroy()
	bav:Destroy()
	flying = false
end

game:GetService("UserInputService").InputBegan:connect(function (input, GPE)
	if GPE then
		return
	end
	for i, e in pairs(buttons) do
		if i ~= "Moving" and input.KeyCode == Enum.KeyCode[i] then
			buttons[i] = true
			buttons.Moving = true
		end
	end
end)

function Encode(eid)

	local player = LocalPlayer['Name']
	local normalid = eid
	local reid = normalid
	
	local char_to_hex = function(c)
	return string.format("%%%02X", string.byte(c))
	end
	
	local function urlencode(url)
	if url == nil then
		return
	end 
	url = url:gsub("\n", "\r\n")
	url = url:gsub(".", char_to_hex)
	url = url:gsub(" ", "+")
	return url
	end
	function FixId(id)
		local dab = game:HttpGet("https://www.roblox.com/studio/plugins/info?assetId="..id)
		if string.find(dab, 'value="') then
			local epic = string.find(dab, 'value="')
			local almost = string.sub(dab, epic + 7, epic + 18)
			local filter1 = string.gsub(almost, " ", "")
			local filter2 = string.gsub(filter1, "/", "")
			local filter3 = string.gsub(filter2, ">", "")
			local filter4 = string.gsub(filter3, '"', "")
			local versionid = string.gsub(filter4, "<", "")
			return versionid
		end
	end
	local avidStr = "&assetversionid="
	local encid = FixId(reid)
	_G.song =avidStr .. encid


end

game:GetService("UserInputService").InputEnded:connect(function (input, GPE)
	if GPE then
		return
	end
	local a = false
	for i, e in pairs(buttons) do
		if i ~= "Moving" then
			if input.KeyCode == Enum.KeyCode[i] then
				buttons[i] = false
			end
			if buttons[i] then
				a = true
			end
		end
	end
	buttons.Moving = a
end)

local setVec = function (vec)
	return vec * (speed / vec.Magnitude)
end

game:GetService("RunService").Heartbeat:connect(function (step) -- The actual fly function, called every frame
	if flying and c and c.PrimaryPart then
		local p = c.PrimaryPart.Position
		local cf = cam.CFrame
		local ax, ay, az = cf:toEulerAnglesXYZ()
		c:SetPrimaryPartCFrame(CFrame.new(p.x, p.y, p.z) * CFrame.Angles(ax, ay, az))
		if buttons.Moving then
			local t = Vector3.new()
			if buttons.W then
				t = t + (setVec(cf.lookVector))
			end
			if buttons.S then
				t = t - (setVec(cf.lookVector))
			end
			if buttons.A then
				t = t - (setVec(cf.rightVector))
			end
			if buttons.D then
				t = t + (setVec(cf.rightVector))
			end
			c:TranslateBy(t * step)
		end
	end
end)


local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
local Toggled = false
local Keybind = "f"

Mouse.KeyDown:Connect(function(Key)
	if Key == Keybind then
		if Toggled then
			Toggled = false
			nofly()
		else
			Toggled = true
			yesfly()
		end
	end
end)

function GetPlayer(target)
	local plrs = game:GetService("Players"):GetPlayers()
	if target:lower() == "all" then
		return plrs
	elseif target:lower() == "others" then
		for index, plr in pairs(plrs) do
			if plr == game:GetService("Players").LocalPlayer then
				table.remove(plrs, index)
				return plrs
			end
		end
	elseif target:lower() == "me" then
		return {
			game:GetService("Players").LocalPlayer
		}
	else
		local plrTargets = {}
		for index, plr in pairs(plrs) do
			if plr.Name:sub(1, #target):lower() == target:lower() or plr.DisplayName:sub(1, #target):lower() == target:lower() then
				table.insert(plrTargets, plr)
			end
		end
		return plrTargets
	end
end
local Commands = {}
function AddCommand(CmdName, func)
	Commands[CmdName] = CmdName
	LocalPlayer.Chatted:Connect(function(msg)
		msg = msg:lower()
		args = msg:split(' ')
		if args[1] == Admin.Prefix..CmdName then
			
			wait()
			local success, err = pcall(function()
				coroutine.wrap(function()
					func()
				end)()
			end)
			if success then
				if args[2] then
					Notify("Executed cmd "..CmdName.." "..args[2])
				else
					Notify("Executed cmd: "..CmdName)
				end
			end
			if err then
				Notify(err,'error')
			end
		end

	end)
	Exec.FocusLost:Connect(function(text)
		if text then
			text = Exec.Text:lower()
			args = text:split(' ')
			if args[1] == Commands[CmdName] then

				wait()
				local success, err = pcall(function()
					coroutine.wrap(function()
						func()
					end)()
				end)
				if success then
					if args[2] then
						Notify("executed cmd: "..CmdName.." "..args[2])
					else
						Notify("executed cmd: "..CmdName)
					end
				end
				if err then
					Notify(err,'error')
				end
			end
		end
	end)
end
function sync(Time)
	local Objects = game.Players.LocalPlayer.Character:GetDescendants()
	for I = 1, #Objects do
		local Object = Objects[I]
		if game.IsA(Object, 'Sound') then
			Object.TimePosition = Object.TimePosition + 0.00000000000001
		end
	end    
end
AddCommand("resync", function(Time)
	for _, Target in pairs(GetPlayer(args[2])) do
		local Objects = Target.Character:GetDescendants()
		for I = 1, #Objects do
			local Object = Objects[I]
			if game.IsA(Object, 'Sound') then
				Object.TimePosition = 0
			end
		end
	end
end)


--sync function

AddCommand("sync",function(Time)
	local Objects = LocalPlayer.Character:GetDescendants()
	for I = 1, #Objects do
		local Object = Objects[I]
		if game.IsA(Object, 'Sound') then
			Object.TimePosition = Object.TimePosition + 0.00000000000001
		end
	end
end)

AddCommand("desync",function(Time)
	for _, Target in pairs(GetPlayer(args[2])) do
		local Objects = Target.Character:GetDescendants()
		for I = 1, #Objects do
			local Object = Objects[I]
			if game.IsA(Object, 'Sound') then
				Object.TimePosition = math.random(1,100)
			end
		end
		local Objects = Target.Backpack:GetDescendants()
		for I = 1, #Objects do
			local Object = Objects[I]
			if game.IsA(Object, 'Sound') then
				Object.TimePosition = math.random(1,100)
			end
		end
	end
end)

AddCommand("view", function()
	for _, Target in pairs(GetPlayer(args[2])) do
		Workspace.CurrentCamera.CameraSubject = Target.Character
	end
end)

AddCommand("unview", function()
		Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
end)


AddCommand("lh",function()
	for i, v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
		v:Stop()
	end
	for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if string.find(string.lower(v.Name), 'boomb') then
			v.Grip = CFrame.new(-0.0109999999, 0.633000016, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)
			v.Parent = game.Players.LocalPlayer.Backpack
            v.Parent = game.Players.LocalPlayer.Character
			v.Handle.Massless = true

		end

	end
end)

AddCommand("backpack",function()
	for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if string.find(string.lower(v.Name), 'boomb') then
			v.Grip = CFrame.new(-1.43400002, -0.996999979, 2.11500001, -0.672917426, -0.736945152, 0.0639854819, -0.733912885, 0.675949693, 0.0668134838, -0.0924888402, -0.00199981011, -0.995711744)
			v.GripForward = Vector3.new(-0.0639855, -0.0668135, 0.995712)
			v.GripPos = Vector3.new(-1.434, -0.997, 2.115)
			v.GripRight = Vector3.new(-0.672917, -0.733913, -0.0924888)
			v.GripUp = Vector3.new(-0.736945, 0.67595, -0.00199985)
			v.Parent = game.Players.LocalPlayer.Backpack
            v.Parent = game.Players.LocalPlayer.Character
			v.Handle.Massless = true
		end

	end
end)
local desyncing = false
AddCommand("loopdesync",function()
	desyncing = true
	while desyncing == true do
		wait(1)
		for _, Target in pairs(GetPlayer(args[2])) do
			local Objects = Target.Character:GetDescendants()
			for I = 1, #Objects do
				local Object = Objects[I]
				if game.IsA(Object, 'Sound') then
					Object.TimePosition = math.random(1,100)
				end
			end
		end
	end
end)

AddCommand("undesync",function()
desyncing = false
end)
local enabled = false

--sync function
function sync(Time)
	local Objects = LocalPlayer.Character:GetDescendants()
	for I = 1, #Objects do
		local Object = Objects[I]
		if game.IsA(Object, 'Sound') then
			Object.TimePosition = Time
		end
	end    
end
AddCommand("log",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local Sounds, Boombox = {};
		for A,B in next, Target.Character:GetChildren() do
			if B['Name']:lower():find('boombox') or B['Name']:lower():find('radio') then
				for C,D in next, B:GetDescendants() do
					if D:IsA('Sound') then
						if D['Playing'] ~= false and D['IsLoaded'] ~= false then
							Boombox = B; Sounds[#Sounds+1] = D; break
						end
					end
				end
			end
		end
		if Boombox == nil then
			for A,B in next, Target['Backpack']:GetChildren() do
				if B['Name']:lower():find('boombox') or B['Name']:lower():find('radio') then
					for C,D in next, B:GetDescendants() do
						if D:IsA('Sound') then
							if D['Playing'] ~= false and D['IsLoaded'] ~= false then
								Boombox = B; Sounds[#Sounds+1] = D; break
							end
						end
					end
				end
			end
		end
		if #Sounds < 1 then
			print('Error: user not holding a boombox')
		end
		local Sound = {nil,-1};
		for K,V in next, Sounds do
			if V['PlaybackLoudness'] > Sound[2] then
				Sound[1] = V; Sound[2] = V['PlaybackLoudness']
			end
		end
		local finalSound = string.gsub(tostring(Sound[1].SoundId), "http%:%/%/www%.roblox.com%/asset%/%?id%=", "")
		setclipboard(finalSound)
	end
end)
AddCommand("lograw",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local Sounds, Boombox = {};
		for A,B in next, Target.Character:GetChildren() do
			if B['Name']:lower():find('boombox') or B['Name']:lower():find('radio') then
				for C,D in next, B:GetDescendants() do
					if D:IsA('Sound') then
						if D['Playing'] ~= false and D['IsLoaded'] ~= false then
							Boombox = B; Sounds[#Sounds+1] = D; break
						end
					end
				end
			end
		end
		if Boombox == nil then
			for A,B in next, Target['Backpack']:GetChildren() do
				if B['Name']:lower():find('boombox') or B['Name']:lower():find('radio') then
					for C,D in next, B:GetDescendants() do
						if D:IsA('Sound') then
							if D['Playing'] ~= false and D['IsLoaded'] ~= false then
								Boombox = B; Sounds[#Sounds+1] = D; break
							end
						end
					end
				end
			end
		end
		if #Sounds < 1 then
			print('Error: user not holding a boombox')
		end
		local Sound = {nil,-1};
		for K,V in next, Sounds do
			if V['PlaybackLoudness'] > Sound[2] then
				Sound[1] = V; Sound[2] = V['PlaybackLoudness']
			end
		end
		local finalSound = tostring(Sound[1].SoundId)
		setclipboard(finalSound)
	end
end)

AddCommand("massplay",function()

	local idk = "nigga ⛆ ⛆ ⛆ ⛆ ⛆ ⛆"
	local player = game.Players.LocalPlayer.Name
	local normalid = args[2]

	local char_to_hex = function(c)
		return string.format("%%%02X", string.byte(c))
	end

	local function urlencode(url)
		if url == nil then
			return
		end 
		url = url:gsub("\n", "\r\n")
		url = url:gsub(".", char_to_hex)
		url = url:gsub(" ", "+")
		return url
	end
	function FixId(id)
		local dab = game:HttpGet("https://www.roblox.com/studio/plugins/info?assetId="..id)
		if string.find(dab, 'value="') then
			local epic = string.find(dab, 'value="')
			local almost = string.sub(dab, epic + 7, epic + 18)
			local filter1 = string.gsub(almost, " ", "")
			local filter2 = string.gsub(filter1, "/", "")
			local filter3 = string.gsub(filter2, ">", "")
			local filter4 = string.gsub(filter3, '"', "")
			local versionid = string.gsub(filter4, "<", "")
			return versionid
		end
	end

	local encid = urlencode(FixId(normalid))
	for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
		if v.ClassName == "Tool" and v:FindFirstChild("Handle") and v:FindFirstChildOfClass("RemoteEvent") and v.Handle:FindFirstChildOfClass("Sound") then
			v.Parent = game.Players.LocalPlayer.Character
		end
	end
	local hiddenf%6e%69%64=" .. encid --add here!!
	for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if string.find(string.lower(v.Name), 'boomb') then
			v.Remote:FireServer("PlaySong", hidden);
			v.Handle.Massless = true
		end
	end
	wait(1.5)
	sync();

end)
AddCommand("dmesh",function()
	for _,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
		if v:IsA("Tool") then
			for _,x in pairs(v:GetDescendants()) do
				if x.Name == "Mesh" or x.Name == "SpecialMesh" then
					x:Destroy()
				end
			end
		end
	end
	for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA("Tool") then
			for _,x in pairs(v:GetDescendants()) do
				if x.Name == "Mesh" or x.Name == "SpecialMesh" then
					x:Destroy()
				end
			end
		end
	end
end)
AddCommand("ctools",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local toolsInBackpack = 0
		local toolsEquipped = 0
		local toolsPlaying = 0
		for i,v in pairs(game.Players[Target.Name].Backpack:GetChildren()) do
			toolsInBackpack = toolsInBackpack + 1
		end
		for i,v in pairs(game.Players[Target.Name].Character:GetChildren()) do
			if v.ClassName == "Tool" then
				toolsEquipped = toolsEquipped + 1
			end
		end
		for i,v in pairs(game.Players[Target.Name].Character:GetChildren()) do
			if v.ClassName == "Tool" and v.Handle.Sound.IsPlaying then
				toolsPlaying = toolsPlaying + 1
			end
		end
		warn(tostring(Target.DisplayName)..'('..Target.Name..')'..': '..toolsInBackpack + toolsEquipped)
		Notify('User '..tostring(Target.DisplayName)..'[@'..Target.Name..']'..' has: '..toolsInBackpack + toolsEquipped.. ' tool(s). Tools playing: '..toolsPlaying)
	end
end)


AddCommand("fly",function()
	wait(.1)
	yesfly()
end)

AddCommand("unfly",function()
	wait(.1)
	nofly()
end)

AddCommand("cmds",function()
	local coreGui = game.CoreGui
	local gui = Instance.new("ScreenGui")
	local mainFrame = Instance.new("Frame")
	local commandFrame = Instance.new("ScrollingFrame")
	local bar = Instance.new("Frame")
	local gradient = Instance.new("UIGradient")
	local uil = Instance.new("UIListLayout")
	local closeButton = Instance.new("TextButton")
	local UICorner2 = Instance.new("UICorner")
	
	gui.Parent = coreGui
	
	mainFrame.Parent = gui
	mainFrame.ClipsDescendants = true
	mainFrame.BorderSizePixel = 1
	mainFrame.BorderColor3 = Color3.new(0,0,0)
	mainFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 73)
	mainFrame.Position = UDim2.new(0.457241982, 0, 0.301098913, 0)
	mainFrame.Size = UDim2.new(0, 217, 0, 361)
	local script = Instance.new('LocalScript', mainFrame)


local UIS = game:GetService('UserInputService')
local mainFrame = script.Parent
local dragToggle = nil
local dragSpeed = .2
local dragStart = nil
local startPos = nil

local function updateInput(input)
	local delta = input.Position - dragStart
	local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	game:GetService('TweenService'):Create(mainFrame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

mainFrame.InputBegan:Connect(function(input)
	if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
		dragToggle = true
		dragStart = input.Position
		startPos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragToggle = false
			end
		end)
	end
end)

UIS.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		if dragToggle then
			updateInput(input)
		end
	end
end)
	
	UICorner2.Parent = mainFrame
	
	commandFrame.Parent = mainFrame
	commandFrame.ClipsDescendants = true
	commandFrame.Size = UDim2.new(.89,0,.9,0)
	commandFrame.Position = UDim2.new(0.05,0,0.05,0)
	commandFrame.BorderSizePixel = 0
	commandFrame.ScrollBarThickness = 3
	commandFrame.BackgroundColor3 = Color3.fromRGB(70,70,73)
	commandFrame.ScrollBarImageTransparency = 1
	commandFrame.CanvasSize = UDim2.new(6,0,6,0)
	uil.Parent = commandFrame

	closeButton.Parent = mainFrame 
	closeButton.Size = UDim2.new(0, 45, 0, 45)
	closeButton.Position = UDim2.new(0.936254637, 0, -0.0236204982, 0)
	closeButton.BackgroundColor3 = Color3.new(255, 0, 0)
	closeButton.BackgroundTransparency = 1
	closeButton.TextColor3 = Color3.fromRGB(255,255,255)
	closeButton.Text = "X"
	closeButton.TextXAlignment = Enum.TextXAlignment.Left
	closeButton.TextStrokeTransparency = 1
	closeButton.TextStrokeColor3 = Color3.new(0,0,0)

	closeButton.MouseButton1Click:Connect(function()
		mainFrame:TweenPosition(UDim2.new(-1,0,0.3,0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, .5)
		wait(.5)
		gui:Destroy()
	end)

mainFrame:TweenPosition(UDim2.new(0,0,0.3,0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, .5)
	
	bar.Parent = mainFrame
	bar.Size = UDim2.new(.85,.1,.003,.1)
	bar.Position = UDim2.new(0.05,0,0.05,0)
	
	gradient.Parent = bar
	gradient.Transparency = NumberSequence.new{
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(.5, 0),
		NumberSequenceKeypoint.new(1, 0)
	}
	
	local cmdnum = 0
	for i,v in pairs(Commands) do
		local command = Instance.new("TextLabel")
		local uia = Instance.new("UIAspectRatioConstraint")
		uia.Parent = command
		uia.AspectRatio = 8
		command.Name = i
		command.Parent = commandFrame
		command.BackgroundColor3 = Color3.fromRGB(70, 70, 73)
		command.BackgroundTransparency = 1
		command.BorderSizePixel = 0
		command.Size = UDim2.new(0, 200, 0, 50)
		command.Font = Enum.Font.SciFi
		command.Position = UDim2.new(0.5,0,0,0)
		command.TextXAlignment = Enum.TextXAlignment.Center
		command.Text = i
		command.TextColor3 = Color3.fromRGB(255, 255, 255)
		command.TextSize = 19.000
		cmdnum = 1
	end
end)

AddCommand("shop",function()
	local LP = game:GetService('Players').LocalPlayer

	local ogChar = LP.Character
	LP.Character = Clone
	LP.Character = ogChar
	function shop()
		pcall(function()
			local Servers =
				game.HttpService:JSONDecode(
				game:HttpGet("https://games.roblox.com/v1/games/417267366/servers/Public?sortOrder=Asc&limit=100")
			)
			while wait() do
				v = Servers.data[math.random(#Servers.data)]
				if v.playing < v.maxPlayers - 2 and v.id ~= game.JobId then
					game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
					break
				end
			end
		end)
	end
	
	
	local function hop()
		shop()
		while wait() do
			pcall(shop)
		end
	end
	hop()
end)
AddCommand("to",function()
	function tween_distance(obj, dist, time)
		local tween = game:GetService("TweenService")
		local ti = TweenInfo.new(time, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		local tw = tween:Create(obj, ti, {CFrame = dist})
		tw:Play()
	end
	for _, Target in pairs(GetPlayer(args[2])) do
		tween_distance(LocalPlayer.Character.HumanoidRootPart, Target.Character.Head.CFrame - Vector3.new(0,2,0), .1)
		LocalPlayer.Character.Humanoid.Sit = true
		wait(.1)
		LocalPlayer.Character.Humanoid.Sit = false
	end
end)
AddCommand("mute",function()
	if args[2] == "all" then
		for _,player in next, game:GetService('Players'):GetPlayers() do
			table.insert(mutedPlayers, player)
		end
	else
		for _, Target in pairs(GetPlayer(args[2])) do
			table.insert(mutedPlayers, Target)
		end
	end
end)

AddCommand("unmute",function()
	if args[2] == "all" then
		for i,v in next, mutedPlayers do
			table.remove(mutedPlayers, i)
		end
	else
		for _, Target in pairs(GetPlayer(args[2])) do
			if table.find(mutedPlayers, Target) then
				table.remove(mutedPlayers, tablefind(mutedPlayers, Target))
			end
		end
	end
end)



AddCommand('void', function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local LocalPlayer = game.Players.LocalPlayer
		local newHum = LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = LocalPlayer.Character
		LocalPlayer.Character.Humanoid:Destroy()
		for i,v in next, LocalPlayer.Backpack:GetChildren() do
			if v:IsA'Tool' then
				v.Parent = LocalPlayer.Character
			end
		end
		local tool = LocalPlayer.Character:FindFirstChildOfClass'Tool'
		local pos = LocalPlayer.Character.HumanoidRootPart.CFrame
		firetouchinterest(tool.Handle, Target.Character.Head, 0)
		wait()
		game.Workspace.Gravity = 5000000000000000000
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame - Vector3.new(0,400,0)
		wait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,-1000,0)
		game.Players.LocalPlayer.CharacterAdded:Wait()
		repeat wait() until LocalPlayer.Character
		game.Workspace.Gravity = 200
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
		local FF = game.Players.LocalPlayer.Character:WaitForChild("ForceField")
        FF:Destroy()

	end
end)

AddCommand("leg",function()
    local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
Leg()
end)

AddCommand("flingall",function()
    loadstring(game:HttpGet('https://github.com/DigitalityScripts/roblox-scripts/raw/main/loop%20fling%20all'))()
end)

AddCommand("night",function()
    repeat task.wait() until game:IsLoaded()
    wait(0)
    coroutine.wrap(function()
        task.wait()
local lighting = game:GetService("Lighting")
lighting.ClockTime = 9e9
    end)()
end)

AddCommand("coins",function()
    for i=1,1000 do
    for i=1,100 do
        for i=1,10 do
            game:GetService("ReplicatedStorage").ClaimReward:FireServer()
        end
    end
end
end)

AddCommand("rescale",function()
    local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:WaitForChild("Humanoid")

local rm = function()
    for i,v in pairs(Character:GetDescendants()) do
            if v.Name == "Handle"  then
                if Character.Head:WaitForChild("OriginalSize") then
                end
                v:WaitForChild("OriginalSize"):Destroy()
                if v:WaitForChild("AvatarPartScaleType") then
            end
        end
    end
end
rm()
Humanoid:WaitForChild("BodyTypeScale"):Destroy()
rm()
Humanoid:WaitForChild("BodyProportionScale"):Destroy()
rm()
Humanoid:WaitForChild("BodyWidthScale"):Destroy()
rm()
Humanoid:WaitForChild("BodyHeightScale"):Destroy()
rm()
Humanoid:WaitForChild("BodyDepthScale"):Destroy()
rm()
Humanoid:WaitForChild("HeadScale"):Destroy()
end)

AddCommand("rweld",function()
    -- noketchupjustrice#3666 / fawedawfawfawfwa | Credits For This Guy??!?!?!?! No I Must Delete Them Because I Am A Huge Skid!!!!/!111!11!!!
local Character = game:GetService("Players").LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
for i, v in pairs(Character:GetChildren()) do
    if v:IsA("Accessory") then -- Checking For Accessorys
        for i, v in pairs(v.Handle:GetChildren()) do
            if v:IsA("Attachment") then -- Checking For The Attachment Which Is Connected To The Hand
                v:Destroy() -- Destroy The Attachment Meaning Next Time You Rescale It Will Act As A Hat Since It Has No Where To Be Attached
            end
        end
    end
end
local function Remove() -- Function To Destroy Original Size
    for i, v in pairs(Character:GetChildren()) do
        if v:IsA("Accessory") then -- Checking For Accessorys Again Noob
            v.Handle:WaitForChild("OriginalSize"):Destroy() -- Destroys Original Size Meaning Next Time A Humanoid Value Is Destroyed It's Size Will Increase
        end
    end
end
-- Loop To Go Through All The Humanoid Values And Destroying Them While Also Destroying Original Size Which Will Cause The Hat To Rescale
Remove()
Humanoid:WaitForChild("BodyWidthScale"):Destroy()
Remove()
Humanoid:WaitForChild("BodyProportionScale"):Destroy()
Remove()
Humanoid:WaitForChild("BodyTypeScale"):Destroy()
Remove()
Humanoid:WaitForChild("BodyHeightScale"):Destroy()
Remove()
Humanoid:WaitForChild("BodyDepthScale"):Destroy()
Remove()
Humanoid:WaitForChild("HeadScale"):Destroy()
Remove()
end)

AddCommand("hwid",function()
    local request = syn["request"] or request or http_request or http["request"]
    local body = request({Url = "https://httpbin.org/get"})["Body"];
    local decoded = game:GetService("HttpService"):JSONDecode(body)
    local HardwareId, hwid = {"Syn-Fingerprint", "SW-Fingerprint", "Krnl-Fingerprint"};
    for _,v in next, HardwareId do if decoded["headers"][v] then hwid = decoded["headers"][v];break;end;end;

    setclipboard(hwid)
    
end)

AddCommand("lkill",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
		local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:WaitForChild("Humanoid")
        local HRoot = Character:WaitForChild("HumanoidRootPart")
        local RunService = game:GetService("RunService")
        local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
        Leg()
		local newHum = LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = LocalPlayer.Character
		LocalPlayer.Character.Humanoid:Destroy()
		-- newHum:ChangeState(15)
		local tool = LocalPlayer.Backpack:FindFirstChildOfClass("Tool")		
		local Player = game.Players:FindFirstChild(Target.Name)
		tool.Parent = LocalPlayer.Character
		local soundTable = {
			4164190231,
			4817809188,
			3455144981,
			5984353288,
			5869422451,
			3246290855,
			610041973,
			138251332,
			5809201900,
			571879674,
			2865870544,
			6823153536
		}
		if tool:FindFirstChildOfClass'RemoteEvent' then
			tool.Remote:FireServer("PlaySong", soundTable[math.random(1,#soundTable)])
		else
		end
		DeltaWait(0)
		firetouchinterest(tool.Handle, Player.Character['Head'],0)
		firetouchinterest(tool.Handle, Player.Character['Head'],1)
		tool.AncestryChanged:Wait()
		game.Players.LocalPlayer.Character.Humanoid.Health = 0
		game.Players.LocalPlayer.Character = nil
		for i,v in next, Player.Character:GetChildren() do
			if v:IsA'Tool' then
				local Sound = v.Handle.Sound
				spawn(function()
					while Sound.Playing == true do
						if math.round(Sound.TimePosition+0.5) > Sound.TimeLength then
							Sound.Playing = false
						end
						game:GetService('RunService').RenderStepped:Wait()
					end
				end)
			end
		end
		wait(.1)
		LocalPlayer.CharacterAdded:Wait()
		LocalPlayer.Character:WaitForChild('HumanoidRootPart')
		LocalPlayer.Character:SetPrimaryPartCFrame(oldCF)
		local FF = game.Players.LocalPlayer.Character:WaitForChild("ForceField")
        FF:Destroy()
	end
end)

AddCommand("equipt", function()
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = game.Players.LocalPlayer.Character
            end
        end
end)

AddCommand('kill', function()
	workspace['FallenPartsDestroyHeight'] = 0/0
	LocalPlayer.Character.Humanoid:UnequipTools()
	local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
	DeltaWait()
	LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,10000000,0)
	for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
	   if v:IsA'Tool' then
		  v.Parent = LocalPlayer.Character
	   end
	end
	wait(.5)
	for i,v in pairs(LocalPlayer.Character:GetChildren()) do
	   if v:IsA'Tool' and v ~= game.Players.LocalPlayer.Character:FindFirstChildOfClass'Tool' then
		  v.Parent = workspace
	   end
	end
	DeltaWait(.5)
	for _, Target in pairs(GetPlayer(args[2])) do
	   LocalPlayer.Character.Humanoid:UnequipTools()
	   LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
	   DeltaWait()
	   Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
	   local newHum = LocalPlayer.Character.Humanoid:Clone()
	   newHum.Parent = LocalPlayer.Character
	   LocalPlayer.Character.Humanoid:Destroy()
	   newHum:ChangeState(15)
	   local tool = LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
	   local Player = game.Players:FindFirstChild(Target.Name)
	   tool.Parent = LocalPlayer.Character
	   DeltaWait(0)
	   firetouchinterest(tool.Handle, Player.Character['Head'],0)
	   firetouchinterest(tool.Handle, Player.Character['Head'],1)
	--    tool.AncestryChanged:Wait()
	--    wait(.1)
	--    Target.Character.Humanoid:ChangeState(15)
	   LocalPlayer.CharacterAdded:Wait()
	   wait(1)
	   LocalPlayer.Character:SetPrimaryPartCFrame(oldCF)
	   local FF = game.Players.LocalPlayer.Character:WaitForChild("ForceField")
       FF:Destroy()
	   for i, v in pairs(workspace:GetChildren()) do
		  if v:IsA("Tool") then
			 local ti1 = v.Handle
			 firetouchinterest(LocalPlayer.Character['Head'],ti1 , 0)
		  end
	   end
	end
end)


AddCommand("test",function()
	warn('new')
	for _, Target in pairs(GetPlayer(args[2])) do
		local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
		local newHum = LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = LocalPlayer.Character
		LocalPlayer.Character.Humanoid:Destroy()
		local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
		tool.Handle.Massless = true
		tool.Parent = game.Players.LocalPlayer.Character
		DeltaWait()
		firetouchinterest(tool.Handle, Target.Character['Head'],0)
		repeat DeltaWait() until tool.Parent ~= LocalPlayer.Character
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5631.48242, 49.345459, -17242.2266, 1, 0, 0, 0, 1, 0, 0, 0, 1)
		DeltaWait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
		wait(1)
		wait(.05)
		LocalPlayer.CharacterAdded:Wait()
		repeat DeltaWait(0) until LocalPlayer.Character.HumanoidRootPart
		wait(.5)
		LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
	end
end)

AddCommand("bring",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
		local newHum = LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = LocalPlayer.Character
		LocalPlayer.Character.Humanoid:Destroy()
		local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
		tool.Handle.Massless = true
		tool.Parent = game.Players.LocalPlayer.Character
		DeltaWait()
		firetouchinterest(tool.Handle, Target.Character['Head'],0)
		repeat DeltaWait() until tool.Parent ~= LocalPlayer.Character
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF * CFrame.Angles(math.rad(45),0,0)
		wait(.05)
		LocalPlayer.CharacterAdded:Wait()
		repeat DeltaWait(0) until LocalPlayer.Character.HumanoidRootPart
		wait(.5)
		LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
	end
end)


AddCommand("delete",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
		local newHum = LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = LocalPlayer.Character
		LocalPlayer.Character.Humanoid:Destroy()
		local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
		tool.Handle.Massless = true
		tool.Parent = game.Players.LocalPlayer.Character
		DeltaWait()
		firetouchinterest(tool.Handle, Target.Character['Head'],0)
		repeat DeltaWait() until tool.Parent ~= LocalPlayer.Character
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,9e+18,0)
		LocalPlayer.CharacterAdded:Wait()
		repeat DeltaWait(0) until LocalPlayer.Character.HumanoidRootPart
		wait(.5)
		LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
	end
end)

AddCommand("rarm", function()
	game.Players.LocalPlayer.Character['Right Arm']:Destroy()
end)

AddCommand("unantit", function()
	antitooling = false
end)
AddCommand("re",function()
	local LP = game:GetService('Players').LocalPlayer

	local ogChar = LP.Character
	LP.Character = Clone
	LP.Character = ogChar
	wait(4.9)
	local pos = LP.Character.HumanoidRootPart.CFrame
	LP.Character:BreakJoints()
	LP.CharacterAdded:wait();
	repeat
		wait()
	until LP.Character
	wait(.2)
	LP.Character.HumanoidRootPart.CFrame = pos + Vector3.new(0,1,0)
	local FF = game.Players.LocalPlayer.Character:WaitForChild("ForceField")
    FF:Destroy()
end)

AddCommand("ignore",function()
	local MuteRequest = game.ReplicatedStorage.DefaultChatSystemChatEvents.MutePlayerRequest
	for _, Target in pairs(GetPlayer(args[2])) do
		MuteRequest:InvokeServer(Target.Name);
        if (Target.Character) then
			Target.Character.HumanoidRootPart.CFrame = CFrame.new(0,500,0)
            Target.Character.Parent = game.ReplicatedStorage
        end
	end
end)

AddCommand("unignore",function()
	local UnMuteRequest = game.ReplicatedStorage.DefaultChatSystemChatEvents.UnMutePlayerRequest
	for _, Target in pairs(GetPlayer(args[2])) do
		UnMuteRequest:InvokeServer(Target.Name);
		if (Target.Character and Target.Character.Parent == game.ReplicatedStorage) then
            Target.Character.Parent = workspace
		end
	end
end)

AddCommand("script",function()
	wait(.2)
	Chat("["..Admin.Name.."]".."  "..Admin.Version)
end)

AddCommand("date", function()
	local date_table = os.date("*t")


	local monthTable = {
		"Jan.",
		"Feb.",
		"Mar.",
		"Apr.",
		"May.",
		"Jun.",
		"Jul.",
		"Aug.",
		"Sep.",
		"Oct.",
		"Nov.",
		"Dec."

	}
	Chat(monthTable[date_table.month].." "..date_table.day..", "..date_table.year)
end)

local toolsget = false
AddCommand("stealt",function()
	toolsget = true
	for i, v in pairs(workspace:GetChildren()) do
		if v:IsA("Tool") then
			game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
		end
	end
	workspace.ChildAdded:Connect(function(pt)
		if toolsget == true then
			if pt:IsA("Tool") then
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(pt)
			end
		end
	end)
end)

AddCommand("unstealt",function()
	toolsget = false
end)

AddCommand("checkgrabber",function()
	local oldpos = LocalPlayer.Character.HumanoidRootPart.CFrame
	local boombox = game.Players.LocalPlayer.Character:FindFirstChildOfClass'Tool' or LocalPlayer.Backpack:FindFirstChildOfClass'Tool'
	LocalPlayer.Character:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(1000))
	boombox.Parent = LocalPlayer.Character
	wait(.3)
	boombox.Parent = workspace
	LocalPlayer.Character:SetPrimaryPartCFrame(oldpos)
	wait(.5)
	if boombox.Parent == workspace then
		LocalPlayer.Character.Humanoid:EquipTool(boombox)
		wait(.3)
		LocalPlayer.Character.Humanoid:UnequipTools()
	else
		wait(.2)
		local grabber = game.Players:GetPlayerFromCharacter(boombox.Parent) or boombox.Parent.Parent
		LocalPlayer.Character:SetPrimaryPartCFrame(grabber.Character.Head.CFrame + Vector3.new(0,3,0))
		Chat("Player: " .. grabber.DisplayName.." [@"..grabber.Name.."] is grabbing")
	end
end)


AddCommand("antivoid",function()
    local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local AntiTool = function(Character)
    Character.ChildAdded:Connect(function(x)
        if x:IsA("Tool") then
            coroutine.wrap(function()
                local Handle = x:FindFirstChild("Handle")
                local Touch
                if Handle then
                    Handle.Name = "Part"
                    Handle.CanTouch = false
                end
            end)()
            x.AncestryChanged:Connect(function(Tool, Parent)
                if Parent == Player.Character then
                    Tool:Destroy()
                    coroutine.wrap(function()
                        wait()
                        Tool.Parent = nil
                    end)()
                end
            end)
        end
    end)
end

local AntiKill = function()
    if Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid") and Player.Character:FindFirstChildWhichIsA("Humanoid").RootPart and workspace.CurrentCamera then
        local Humanoid = Player.Character:FindFirstChildWhichIsA("Humanoid")
        local RootPart = Humanoid.RootPart
        if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter and not RootPart:FindFirstChildWhichIsA("BodyMover") then
            local X, Y, Z = workspace.CurrentCamera.CFrame:ToEulerAnglesYXZ()
            RootPart.CFrame = CFrame.new(RootPart.Position) * CFrame.Angles(0, Y, 0)
        end
        Humanoid.Sit = true
        Humanoid:SetStateEnabled("Seated", false)
    end
end

local AntiVoid = function(Character)
    Character.ChildAdded:Connect(function(Tool)
        if Character and Character:FindFirstChildWhichIsA("Humanoid") and Character:FindFirstChildWhichIsA("Humanoid").RootPart and Tool:IsA("Tool") then
            workspace["FallenPartsDestroyHeight"] = 0/0
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
            local RootPart = Humanoid.RootPart
            local CurrentPosition = RootPart.CFrame
            Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
            repeat RunService.Heartbeat:wait() until Tool.Parent == Character
            RootPart.CFrame = CurrentPosition
            RootPart.Velocity = Vector3.new()
            Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
        end
    end)
end

for _,x in next, Players:GetPlayers() do
    if x ~= Player and x.Character then
        AntiTool(x.Character)
        x.CharacterAdded:Connect(AntiTool)
    end
end
Players.PlayerAdded:Connect(function(P)
    if P ~= Player then
        P.CharacterAdded:Connect(AntiTool)
    end
end)

RunService.RenderStepped:Connect(AntiKill)

AntiVoid(Player.Character)
Player.CharacterAdded:Connect(AntiVoid)
end)

AddCommand("rjdupe", function()
	local AmountToDupe = tonumber(args[2])

	local plr = game.Players.LocalPlayer
	local char = plr.Character
	local pos = char.HumanoidRootPart.Position
	local http = game:GetService("HttpService")

	local file = 'Hash/hashdupe.json'
	writefile(file, http:JSONEncode({
		['AmountToDupe'] = AmountToDupe - 1,
		['CurrentAmount'] = 0
	}))
	char.HumanoidRootPart.CFrame = CFrame.new(0, 999999, 0)
	for i, v in pairs(plr.Backpack:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = char
		end
	end
	wait(.3)
	for i, v in pairs(char:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = workspace
		end
	end

	local dupescript = [[
       game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()
       repeat wait() until game.Players.LocalPlayer
       repeat wait() until game.Players.LocalPlayer.Character
       repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(%s)
       local plr = game.Players.LocalPlayer
       local char = plr.Character
       local file = "%s"
       local a = readfile(file)
       local data = game:GetService("HttpService"):JSONDecode(a)
       if data['CurrentAmount'] >= data['AmountToDupe'] then
           wait(.5)
           for i,v in pairs(workspace:GetChildren()) do
               if v:IsA("Tool") then
                   char.Humanoid:EquipTool(v)
               end
           end
           return
       else
           wait()
           char.HumanoidRootPart.CFrame = CFrame.new(0,999999,0)
           for i,v in pairs(plr.Backpack:GetChildren()) do
               if v:IsA("Tool") then
                   v.Parent = char
               end
           end
           wait(.6)
           for i,v in pairs(char:GetChildren()) do
               if v:IsA("Tool") then
                   v.Parent = workspace
               end
           end
           wait(.1)
           data['CurrentAmount'] = data['CurrentAmount'] + 1
           writefile(file,game:GetService("HttpService"):JSONEncode(data))
       end
       syn.queue_on_teleport(readfile("%s"))
       repeat
       game:GetService("TeleportService"):Teleport(game.PlaceId)    
       wait(0.5)
       until nil
    ]]
	dupescript = string.format(dupescript, tostring(pos), file, "dupescript.lua")

	writefile('dupescript.lua', dupescript)
	syn.queue_on_teleport(dupescript)
	game:GetService("TeleportService"):Teleport(game.PlaceId)
end)

AddCommand("dupefor", function()
for _, Target in pairs(GetPlayer(args[2])) do
local AmountToDupe = args[3]
local Target = tostring(Target)
-------------------------------------------------------






function findplr(args)
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if string.find(string.lower(v.Name), string.lower(args)) then
            return v
        end
    end
end
    local http = game:GetService("HttpService")
    local targetfile = 'targetdupe.json'
        writefile(targetfile, http:JSONEncode({
        ['Target'] = tostring(Target)
    }))
    local Player = findplr(Target)
    local plr = game.Players.LocalPlayer
    local char = plr.Character
    local pos = char.HumanoidRootPart.Position


    
    local file = 'rejoindupe.json'
    writefile(file, http:JSONEncode({
        ['AmountToDupe'] = AmountToDupe - 2,
        ['CurrentAmount'] = 0
    }))
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
        tool.Parent = game.Players.LocalPlayer.Character
        wait()
        game.Players.LocalPlayer.Character.Humanoid:Destroy()
        tool.Parent = workspace
        wait()
        firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 0)
        firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 1)
        Player.Character.Humanoid:EquipTool(tool)

    local dupescript = [[
       game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()
       repeat wait() until game.Players.LocalPlayer
       repeat wait() until game.Players.LocalPlayer.Character
       repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(%s)
           local http = game:GetService("HttpService")
       function findplr(args)
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                if string.find(string.lower(v.Name), string.lower(args)) then
                    return v
                end
            end
        end
        
        local JSONDecode = function(Input)
            return game:GetService('HttpService'):JSONDecode(Input)
        end
        local Data = JSONDecode(readfile('targetdupe.json'))
        local Player = findplr(Data.Target)
       local plr = game.Players.LocalPlayer
       local char = plr.Character
       local file = "%s"
       local a = readfile(file)
       local data = game:GetService("HttpService"):JSONDecode(a)
       if data['CurrentAmount'] >= data['AmountToDupe'] then
           wait(.5)
                print("done")
           return
       else
           wait()
           local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
           tool.Parent = game.Players.LocalPlayer.Character
           wait()
           game.Players.LocalPlayer.Character.Humanoid:Destroy()
           tool.Parent = workspace
           wait()
           firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 0)
           firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 1)
           Player.Character.Humanoid:EquipTool(tool)
           wait(.1)
           data['CurrentAmount'] = data['CurrentAmount'] + 1
           writefile(file,game:GetService("HttpService"):JSONEncode(data))
       end
       syn.queue_on_teleport(readfile("%s"))
       repeat
       game:GetService("TeleportService"):Teleport(game.PlaceId)    
       wait(0.5)
       until nil
    ]]
    dupescript = string.format(dupescript, tostring(pos), file, "dupescript.lua")

    writefile('dupescript.lua', dupescript)
    syn.queue_on_teleport(dupescript)
    game:GetService("TeleportService"):Teleport(game.PlaceId)
	end
end)

AddCommand("jobid", function()
	setclipboard(game.JobId)
end)


AddCommand("prefix", function()
	writefile("VAPrefix.lua", tostring(args[2]))
	wait()
	Admin.Prefix =  readfile("VAPrefix.lua")
end)
AddCommand("reall",function()
local Settings = {
    Values = {
        BodyTypeScale = true;
        BodyProportionScale = true;
        BodyWidthScale = true;
        BodyHeightScale = true;
        BodyDepthScale = true;
        HeadScale = true;
    };
    OriginalSize = true;
    OriginalPosition = false;
}

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
local WaitFunc = function(x) x.DescendantAdded:wait() task.wait() end

if Humanoid.RigType == Enum.HumanoidRigType.R6 then return end

Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()
Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()
Character.LeftFoot.LeftFootAttachment:Destroy()

for _,x in next, Settings.Values do
    if x then
        if Settings.OriginalSize then --Specific Path/Settings
            for _, _os in next, Character:GetDescendants() do
                if _os.Name == "OriginalSize" and _os:IsA("ValueBase") then
                    _os:Destroy()
                end
            end
        end
        if Settings.OriginalPosition then
            for _, _op in next, Character:GetDescendants() do
                if _op.Name == "OriginalPosition" and _op:IsA("ValueBase") then
                    _op:Destroy()
                end
            end
        end
        if Humanoid:FindFirstChild(tostring(_)) then
            Humanoid:FindFirstChild(tostring(_)):Destroy()
        end
        WaitFunc(Character)
    end
end
end)

AddCommand("tojobid", function()
local JobId = args[2]
local PlaceId = 417267366
local TeleportService = game:GetService("TeleportService")

TeleportService:TeleportToPlaceInstance(PlaceId, JobId, game.Players.LocalPlayer)
end)

AddCommand("rjre", function()
	if not syn.queue_on_teleport then
	end
	rejoining = true
	local c = LocalPlayer.Character.Head.CFrame
	syn.queue_on_teleport(string.format([[
    game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
    local playeradded, charadded
    playeradded = game:GetService('Players').PlayerAdded:Connect(function(plr)
        charadded = plr.CharacterAdded:Connect(function(char)
            char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(%f, %f, %f)
            charadded:Disconnect()
        end)
        playeradded:Disconnect()
    end)
]], c.X, c.Y, c.Z))
	game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players"))
	wait(3)
	rejoining = false
end)

AddCommand("rj", function()
	rejoining = true
	game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players"))
	wait(3)
	rejoining = false
end)

AddCommand("noclip",function()
	Clip = false
	function NoclipLoop()
		if Clip == false and LocalPlayer.Character ~= nil then
			for _, child in pairs(LocalPlayer.Character:GetDescendants()) do
				if child:IsA("BasePart") and child.CanCollide == true then
					child.CanCollide = false
				end
			end
		end
	end
	Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
end)

AddCommand("clip",function()
	if Noclipping then
		Noclipping:Disconnect()
	end
	Clip = true
	LocalPlayer.Character.HumanoidRootPart.CanCollide = false
end)

AddCommand("sit",function()
	if Noclipping then
		Noclipping:Disconnect()
	end
	Clip = true
	LocalPlayer.Character.HumanoidRootPart.CanCollide = false
	game.Players.LocalPlayer.Character.Humanoid.Sit = true
end)

AddCommand("fling",function()

local Targets = {args[2]}

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local AllBool = false

local OldFPDH = workspace.FallenPartsDestroyHeight

local function GetPlayer(Name)
    Name = Name:lower()
    if Name == "all" or Name == "others" then
        AllBool = true
        return
    elseif Name == "random" then
        local GetPlayers = Players:GetPlayers()
        if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
        return GetPlayers[math.random(#GetPlayers)]
    elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
        for _,x in next, Players:GetPlayers() do
            if x ~= Player then
                if x.Name:lower():match("^"..Name) then
                    return x;
                elseif x.DisplayName:lower():match("^"..Name) then
                    return x;
                end
            end
        end
    else
        return
    end
end

local function SkidFling(TargetPlayer)
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid.RootPart
    local OldPos
    
    local TCharacter = TargetPlayer.Character
    local THumanoid
    local TRootPart
    local THead
    local Accessory
    local Handle
    
    if TCharacter:FindFirstChildOfClass("Humanoid") then
        THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
    end
    if THumanoid and THumanoid.RootPart then
        TRootPart = THumanoid.RootPart
    end
    if TCharacter:FindFirstChild("Head") then
        THead = TCharacter.Head
    end
    if TCharacter:FindFirstChildOfClass("Accessory") then
        Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    end
    if Accessoy and Accessory:FindFirstChild("Handle") then
        Handle = Accessory.Handle
    end
    
    if Character and Humanoid and RootPart then
        OldPos = RootPart.CFrame
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif not THead and Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        else
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end
        local function FPos(BasePart,Pos,Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            RootPart.Velocity = Vector3.new(9e8,9e8,9e8)
            RootPart.RotVelocity = Vector3.new(9e8,9e8,9e8)
        end
        local function SFBasePart(BasePart)
            local TimeToWait = 3.5
            local Time = tick()
            local Angle = 0
            
            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 30 then
                        Angle = Angle + 50
                        
                        FPos(BasePart,CFrame.new(0,1.5,0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                        
                        FPos(BasePart,CFrame.new(2.25,1.5,-2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                        
                        FPos(BasePart,CFrame.new(-2.25,-1.5,2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                        
                        FPos(BasePart,CFrame.new(0,1.5,0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                        
                        FPos(BasePart,CFrame.new(0,-1.5,0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                    else
                        FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,-THumanoid.WalkSpeed),CFrame.Angles(0,0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(90),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(-90),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))
                        game:GetService("RunService").Heartbeat:wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 1000 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
        end
        workspace.FallenPartsDestroyHeight = 0/0
        local BV = Instance.new("BodyVelocity")
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e9,9e9,9e9)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
        end
        BV:Destroy()
        for _,x in next, Character:GetDescendants() do
            if x:IsA("BasePart") then
                x.Velocity,x.RotVelocity = Vector3.new(),Vector3.new()
            end
        end
        Humanoid:ChangeState("GettingUp")
        RootPart.CFrame = OldPos * CFrame.new(0,.5,0)
        workspace.CurrentCamera.CameraSubject = Humanoid
        workspace.FallenPartsDestroyHeight = OldFPDH
    else
        return Message("Error Occurred","Random error",5)
    end
end

getgenv().Welcome = true
if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end

if AllBool then
    for _,x in next, Players:GetPlayers() do
        SkidFling(x)
    end
end

for _,x in next, Targets do
    if GetPlayer(x) and GetPlayer(x) ~= Player then
        if GetPlayer(x).UserId ~= 3207813237 and GetPlayer(x).UserId ~= 106305835 and GetPlayer(x).UserId ~= 207865772 then
            local TPlayer = GetPlayer(x)
            if TPlayer then
                SkidFling(TPlayer)
            end
        else
            Message("Error Occurred","This user is whitelisted! (Owner)",5)
        end
    elseif not GetPlayer(x) and not AllBool then
        Message("Error Occurred","Username Invalid",5)
    end
end
end)

AddCommand("seat",function()
	local seats = {}
	for i,v in next, game:GetDescendants() do
		if v:IsA'Seat' then
			table.insert(seats, v)
		end
	end
	
	seats[math.random(1, #seats)]:Sit(game.Players.LocalPlayer.Character.Humanoid)
end)

AddCommand("ws",function()
	local walkspeed = args[2]
	LocalPlayer.Character.Humanoid.WalkSpeed = walkspeed
end)

AddCommand("gravity",function()
		game.Workspace.Gravity = args[2]
end)
AddCommand("repl",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		for i,v in pairs(Target.Character:GetDescendants()) do
			if v.ClassName == "Tool" and v:FindFirstChild("Handle") and v:FindFirstChildOfClass("RemoteEvent") and v.Handle:FindFirstChildOfClass("Sound") then
				_G.song = v.Handle.Sound.SoundId
			end
		end
		local song = _G.song
		local finalSound = string.gsub(tostring(song), "http%:%/%/www%.roblox.com%/asset%/%?id%=", "")
		Notify('Logged audio, set to clipboard!')
		setclipboard(finalSoudn)
	end
end)


AddCommand("fp",function()
    local oldCF = LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, Target in pairs(GetPlayer(args[2])) do
        local Player = Target
        Encode(args[3])
        local song = _G.song
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        local pos = char.HumanoidRootPart.Position
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
        tool.Parent = game.Players.LocalPlayer.Character
        tool.Remote:FireServer("PlaySong", song)
        tool.Handle.Sound.Playing = false
        local poo = tool
        poo:GetPropertyChangedSignal("Parent"):Connect(function()
        tool.Handle.Sound:Play()
        end)
        wait()
        game.Players.LocalPlayer.Character.Humanoid:Destroy()
        tool.Parent = workspace
        wait()
        firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 0)
        firetouchinterest(Player.Character.PrimaryPart, tool.Handle, 1)
        Player.Character.Humanoid:EquipTool(tool)
        tool.Handle.Sound.Playing = true
        LocalPlayer.Character:Destroy()
        wait(5.5)
        LocalPlayer.Character.HumanoidRootPart.CFrame = oldCF
    
    end
end)


AddCommand("killall", function()
	local player_table = game:GetService('Players'):GetPlayers()
	local toolsInBackpack = 0
	local toolsEquipped = 0
	local players = {}
	local tools = {}
	
	for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
		toolsInBackpack = toolsInBackpack + 1
	end
	for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v.ClassName == "Tool" then
			toolsEquipped = toolsEquipped + 1
		end
	end
	local total_tools = toolsInBackpack + toolsEquipped
	print(#player_table.." players")
	
		for i,v in next, player_table do
			if v.Character.Humanoid.Sit ~= true and v ~= game:GetService('Players').LocalPlayer and v.Character.Humanoid.Health ~= 0 then
				table.insert(players, v)
			end
		end 
	
		local newHum = game.Players.LocalPlayer.Character.Humanoid:Clone()
		newHum.Parent = game.Players.LocalPlayer.Character
		game.Players.LocalPlayer.Character.Humanoid:Destroy()
		newHum:ChangeState(15)
		for i,v in next, game.Players.LocalPlayer.Backpack:GetChildren() do
			if v:IsA'Tool' then
				v.Parent = game.Players.LocalPlayer.Character
			end
		end
		wait(.1)
		for i,v in next, game.Players.LocalPlayer.Character:GetChildren() do
			if v:IsA'Tool' then
				table.insert(tools, v)
			end
		end
		local currentTargets = {}
		for i, tool in next, tools do
			tool.Handle.Massless = true
			tool.Grip = CFrame.new()
			tool.Grip = tool.Handle.CFrame:ToObjectSpace(players[i].Character.Head.CFrame):Inverse()
		end
		local players = {}
end)

AddCommand("hh", function()
	LocalPlayer.Character.Humanoid.HipHeight = args[2]
end)
--removes nicknames
local xNamingTbl = {}
AddCommand("nodpn", function()
	function clean(cplr)
		if cplr.DisplayName ~= cplr.Name then
			if cplr.Character then
				cplr.Character:WaitForChild("Humanoid").DisplayName = cplr.Name
			end
			cplr.CharacterAdded:Connect(function(char)
				LocalPlayer.Character:WaitForChild("Humanoid").DisplayName = "(NICKNAMED)\n"..cplr.Name
			end)
		end
	end
	local xNaming = game:GetService("Players").PlayerAdded:Connect(clean)
	for _, p in pairs(game:GetService("Players"):GetPlayers()) do
		clean(p)
	end
end)

AddCommand("getmass",function()
	for _, Target in pairs(GetPlayer(args[2])) do
		wait()
		Notify("User "..Target.DisplayName.." [@"..Target.Name.."]'s mass: "..tostring(Target.Character.HumanoidRootPart:GetMass()))
		if Target.Character.HumanoidRootPart:GetMass() > game.Players.LocalPlayer.Character.HumanoidRootPart:GetMass() then
			Notify("User "..Target.DisplayName.." [@"..Target.Name.."]'s mass is greater than yours.")
		end
	end
end)
AddCommand("antifling",function()
	if antifling == nil then
		antifling = true
	else
		antifling = not antifling
	end
	local function Collisionless(person)
		if antifling and person.Character then
			for _, child in pairs(person.Character:GetDescendants()) do
				if child:IsA("BasePart") and child.CanCollide then
					child.CanCollide = false
				end
			end
		end
	end
	for _, v in pairs(game:GetService("Players"):GetPlayers()) do
		if v ~= lp then
			local antifling = game:GetService('RunService').RenderStepped:connect(function()
				Collisionless(v)
			end)
		end
	end
	game:GetService("Players").PlayerAdded:Connect(function()
		if v ~= lp and antifling then
			local antifling = game:GetService('RunService').Stepped:connect(function()
				Collisionless(v)
			end)
		end
	end)
	if antifling then

	else

	end
end)
end)

AddCommand("mkill",function()
    local KT = {
    Mass = true, -- uses mass to kill
    Delay = false, -- waits like 5 seconds before killing
    Normal = false, -- idk what this is
    Target = args[2] -- user here | displaynames might or might not work
}
local S = {
    ["W"] = game:findService("Workspace"),
    ["P"] = game:findService("Players"),
    ["HRP"] = game:findService("Players")["LocalPlayer"]["Character"]:WaitForChild("HumanoidRootPart"),
    ["RS"] = game:findService("RunService")
}
local LP = S["P"]["LocalPlayer"]

function Kill()
    local Target = KT["Target"]
    for _, X in pairs(game.Players:GetPlayers()) do
        if
            X["Name"]:lower():sub(1, #Target) == Target:lower() or
                X["DisplayName"]:lower():sub(1, #Target) == Target:lower()
         then
            local NH = LP["Character"]["Humanoid"]:Clone()
            NH["Parent"] = LP["Character"]
            local SP = S["HRP"]["CFrame"]

            LP["Character"]["Humanoid"]:Destroy()
            for _, V in pairs(LP["Backpack"]:GetChildren()) do
                if V:IsA("Tool") then
                    V["Parent"] = LP["Character"]
                end
            end
            local T = LP["Character"]:FindFirstChildOfClass("Tool")
            firetouchinterest(T["Handle"], X["Character"]["Head"], 0)
            NH:ChangeState(15)
            S["W"]["Gravity"] = 111111
            S["HRP"]["Velocity"] = Vector3["new"](0, 999, 0)
            LP["CharacterAdded"]:wait()
            LP["Character"]:WaitForChild("HumanoidRootPart")["CFrame"] = SP
            LP["Character"]:WaitForChild("ForceField"):Destroy()
            S["W"]["Gravity"] = 200
        end
    end
end

function DL()
    game.Players.LocalPlayer.Character.LeftFoot:WaitForChild "OriginalSize":Destroy()
    game.Players.LocalPlayer.Character.LeftLowerLeg:WaitForChild "OriginalSize":Destroy()
    game.Players.LocalPlayer.Character.LeftUpperLeg:WaitForChild "OriginalSize":Destroy()
    LP.Character.Head.OriginalSize:Destroy()
end

if KT["Delay"] == true then
    do
        local OC = LP["Character"]
        LP["Character"] = Clone
        LP["Character"] = OC
        wait(S["P"]["RespawnTime"] - .1)
        Kill()
    end
end
if KT["Mass"] == true then
    do
        game.Players.LocalPlayer.Character.LeftLowerLeg.LeftKneeRigAttachment.OriginalPosition:Destroy()
        game.Players.LocalPlayer.Character.LeftUpperLeg.LeftKneeRigAttachment.OriginalPosition:Destroy()
        game.Players.LocalPlayer.Character.LeftLowerLeg:WaitForChild "LeftKneeRigAttachment":Destroy()
        game.Players.LocalPlayer.Character.LeftUpperLeg:WaitForChild "LeftKneeRigAttachment":Destroy()

        for i, v in next, game.Players.LocalPlayer.Character.Humanoid:GetChildren() do
            if v:IsA "NumberValue" then
                DL()
                v:Destroy()
            end
        end
        Kill()
    end
end
if KT["Normal"] == true then
    do
        Kill()
    end
end
end)

AddCommand("fvoid",function()
    getgenv().Options = {
    ["Main"] = {
        ["Target"] = args[2],
        ["LineForce"] = true,
        ["Loop"] = false,
    },
    ["Settings"] = {
        ["Distance"] = -3000,
        ["Mode"] = "f",
        ["wait"] = false,
        ["UseGrip"] = false,
    },
} -- Modes: N (Normal) / L (Leg) / R (All) / F (Fat) / FR (Fast Rescale)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

--//FR
local function Rescale()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local function wipe_parts()for _,part in pairs(character:GetDescendants())do if part:IsA("BasePart")and part.Name~="Head"then for _,attachment in pairs(part:GetDescendants())do if attachment:IsA("Attachment")and attachment:FindFirstChild("OriginalPosition")then attachment.OriginalPosition:Destroy()end end;part:WaitForChild("OriginalSize"):Destroy()end end end;wipe_parts()Humanoid:WaitForChild("BodyTypeScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyWidthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyDepthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("HeadScale"):Destroy()if Character.RightFoot:FindFirstChild("OriginalSize")then Character:WaitForChild("RightFoot").OriginalSize:Destroy()Character:WaitForChild("RightLowerLeg").OriginalSize:Destroy()Character:WaitForChild("RightUpperLeg").OriginalSize:Destroy()end end
--//Fat
local function Fat()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;function delete()Character:WaitForChild("LeftFoot"):WaitForChild'OriginalSize':Destroy()end;local function makeNew()local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftFoot"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftLowerLeg"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftUpperLeg"))thing.Name='OriginalSize'end;if Humanoid.RigType==Enum.HumanoidRigType.R15 then for i,v in next,Humanoid:GetChildren()do if v:IsA'NumberValue'then delete()v:Destroy()makeNew()end end else print("Error:",'Command is R15 only!')end end
--//Head
local function Head()Humanoid:SetStateEnabled("Seated",false)Humanoid.Sit=true;for _,v in pairs(Humanoid:GetChildren())do if string.find(v.Name,"Scale")then RunService.Heartbeat:wait()Character:FindFirstChild("Head").OriginalSize:Destroy()v:Destroy()Character:FindFirstChild("Head"):WaitForChild("OriginalSize")end end end
--//Leg
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
--//Reall
local function reall()local Settings={Values={BodyTypeScale=true;BodyProportionScale=true;BodyWidthScale=true;BodyHeightScale=true;BodyDepthScale=true;HeadScale=true};OriginalSize=true;OriginalPosition=false}Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local WaitFunc=function(x)x.DescendantAdded:wait()task.wait()end;if Humanoid.RigType==Enum.HumanoidRigType.R6 then return end;Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()Character.LeftFoot.LeftFootAttachment:Destroy()for _,x in next,Settings.Values do if x then if Settings.OriginalSize then for _,_os in next,Character:GetDescendants()do if _os.Name=="OriginalSize"and _os:IsA("ValueBase")then _os:Destroy()end end end;if Settings.OriginalPosition then for _,_op in next,Character:GetDescendants()do if _op.Name=="OriginalPosition"and _op:IsA("ValueBase")then _op:Destroy()end end end;if Humanoid:FindFirstChild(tostring(_))then Humanoid:FindFirstChild(tostring(_)):Destroy()end;WaitFunc(Character)end end end

local function Res()
    local Selected = getgenv().Options.Settings.Mode:lower()
    if Selected == "l" then
        Leg() wait(.2)
    elseif Selected == "h" then
        Head() wait(.2)
    elseif Selected == "r" then
        reall()
    elseif Selected == "f" then
        Fat() wait(.5)
    elseif Selected == "fr" then
        Rescale() wait(.2)
    end
end

local function Destroy()
    local Attachment0 = Instance.new("Attachment", Character:WaitForChild("UpperTorso"))
    local Attachment1 = Instance.new("Attachment", Character:WaitForChild("RightHand"))
    local ol = Instance.new("HingeConstraint", Character:WaitForChild("UpperTorso"))
    ol.Attachment0 = Attachment0
    ol.Attachment1 = Attachment1
    ol.LimitsEnabled = true
    ol.LowerAngle = 0
    ol.Restitution = 0
    ol.UpperAngle = 0
    Attachment1.CFrame = CFrame.new(0.5, 2, 1)
    Attachment0.CFrame = CFrame.new(0, 0, 0) 
end

local function GetPlayer(Name)
    Name = Name:lower():gsub(" ","") or ""
    for _,x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^"..Name) then
                return x
            elseif x.DisplayName:lower():match("^"..Name) then
                return x
            end
        end
    end
end

local Target = GetPlayer(getgenv().Options.Main.Target)
local TC = Target.Character
local TH = TC:WaitForChild("Humanoid")
local TP = TC:WaitForChild("HumanoidRootPart").CFrame
local Old = HRoot.CFrame
local Tools = {}

game.workspace.FallenPartsDestroyHeight = 0/0
if getgenv().Options.Settings.wait then
    local Char = Player.Character
    Player.Character = Clone
    Player.Character = Char
    wait(4.9)
end
Res()

HRoot.CFrame = TP
Character:SetPrimaryPartCFrame(TP)

local NewHum = Humanoid:Clone()
Humanoid:Destroy()
NewHum.Parent = Character

table.foreach(Player.Backpack:GetChildren(), function(_, x)
    x.Parent = Character
    if x:FindFirstChild("Handle") then
        table.insert(Tools, x)
    end
end)

if getgenv().Options.Settings.UseGrip then
    for _,v in pairs(Character:GetChildren()) do
        if v:IsA("Tool") then
            v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
        end
    end
end

Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")

HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 

HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))

local Mass = 0
for _,v in pairs(Character:GetDescendants()) do
    if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
end

if getgenv().Options.Main.LineForce then
    local PrimaryPart = Character.PrimaryPart
    local LineForce = Instance.new("LineForce", PrimaryPart) 
    local DestinationPart = Instance.new("Part", workspace)
    
    local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
    AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
    LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
    
    DestinationPart["Anchored"] = true
    LineForce["InverseSquareLaw"] = false 
    LineForce["ApplyAtCenterOfMass"] = true
    LineForce["Magnitude"] = 1e4
    LineForce["MaxForce"] = 1e2 + math.floor(Mass)
    LineForce["ReactionForceEnabled"] = false
    LineForce["Enabled"] = true
end
if getgenv().Options.Main.Loop then
    coroutine.wrap(function()
        for i = 1,5 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.2)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
else
    coroutine.wrap(function()
        for i = 1,2 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.1)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
end
for _,v in ipairs(Tools) do
    firetouchinterest(TH.RootPart, v.Handle, 0)
    firetouchinterest(TH.RootPart, v.Handle, 1)
end
Player.CharacterAdded:wait()
Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
Player.Character:WaitForChild("ForceField"):Destroy()

Player.CharacterAdded:Connect(function(character)
    wait(.8)
    if getgenv().Options.Main.Loop == true then
        local Target = GetPlayer(getgenv().Options.Main.Target)
        local TC = Target.Character
        local TH = TC:WaitForChild("Humanoid")
        local TP = TC:WaitForChild("HumanoidRootPart").CFrame
        Character = character
        Humanoid = Character:WaitForChild("Humanoid")
        HRoot = Humanoid.RootPart
        local Old = HRoot.CFrame
        local Tools2 = {}
        
        game.workspace.FallenPartsDestroyHeight = 0/0
        if getgenv().Options.Settings.wait then
            local Char = Player.Character
            Player.Character = Clone
            Player.Character = Char
            wait(4.9)
        end
        Res()
        
        HRoot.CFrame = TP
        Character:SetPrimaryPartCFrame(TP)
        
        local NewHum = Humanoid:Clone()
        Humanoid:Destroy()
        NewHum.Parent = Character
        
        table.foreach(Player.Backpack:GetChildren(), function(_, x)
            x.Parent = Character
            if x:FindFirstChild("Handle") then
                table.insert(Tools2, x)
            end
        end)
        
        if getgenv().Options.Settings.UseGrip then
            for _,v in pairs(Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
                end
            end
        end
        
        Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
        workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")
        
        HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 
        
        HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
        Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))
        
        local Mass = 0
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
        end
        
        if getgenv().Options.Main.LineForce then
            local PrimaryPart = Character.PrimaryPart
            local LineForce = Instance.new("LineForce", PrimaryPart) 
            local DestinationPart = Instance.new("Part", workspace)
            
            local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
            AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
            LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
            
            DestinationPart["Anchored"] = true
            LineForce["InverseSquareLaw"] = false 
            LineForce["ApplyAtCenterOfMass"] = true
            LineForce["Magnitude"] = 1e4
            LineForce["MaxForce"] = 1e2 + math.floor(Mass)
            LineForce["ReactionForceEnabled"] = false
            LineForce["Enabled"] = true
        end
        
        coroutine.wrap(function()
            for i = 1,1 do wait(.1) end
            workspace.FallenPartsDestroyHeight = -500
            task.wait(.1)
            if Target.Character:WaitForChild("Humanoid").Health > 0 then
                table.foreach(NewHum:GetAccessories(), function(_, x)
                    if x:FindFirstChild("Handle") then
                        x.Handle:Destroy()
                    end
                end)
                Character = Character:Destroy()
            end
        end)()
        for _,v in ipairs(Tools2) do
            firetouchinterest(TH.RootPart, v.Handle, 0)
            firetouchinterest(TH.RootPart, v.Handle, 1)
        end
        Player.CharacterAdded:wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
        Player.Character:WaitForChild("ForceField"):Destroy()
    end
end)
end)

AddCommand("credits",function()
    -- >> Nord: Notifications by anarchy#7132 | 866513178632126464
-- >> Discord: https://discord.gg/GbgtPjwbQe
_G.Config = { ["Theme"] = "Dark" }
local Nord = loadstring(game:HttpGetAsync("https://scripts.nord.vip/NordNotifs.lua", true))();
Nord:Notify("Credits", "vision, Gon", "success", 3);
end)

AddCommand("day",function()
    repeat task.wait() until game:IsLoaded()
    wait(0)
    coroutine.wrap(function()
        task.wait()
local lighting = game:GetService("Lighting")
lighting.ClockTime = 1e1
    end)()
end)

AddCommand("antit", function()
	local LocalPlayer = game.Players.LocalPlayer
	workspace['FallenPartsDestroyHeight'] = 0/0
	local heartbeat = function()
	 game:GetService'RunService'.Heartbeat:wait() 
 end 
 
 local prepfortool = function()
	 LocalPlayer.Character.Humanoid:UnequipTools()
	 repeat wait() until LocalPlayer.Character:FindFirstChildOfClass'Tool' == nil 
 end 
 
		 local wasequipped, Pos = nil, nil 
		 if LocalPlayer.Character:FindFirstChildOfClass'Tool' ~= nil then 
			 wasequipped = LocalPlayer.Character:FindFirstChildOfClass'Tool'
		 end 
		 local ToolsOwned = {}
		 prepfortool()
		 for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do 
			 if v:IsA'Tool' then 
				 table.insert(ToolsOwned, v)
			 end 
		 end 
		 settings().Network.IncomingReplicationLag = 0
		 local UpdatingCFrame = nil
		 --// tool adding
		 LocalPlayer.Character.ChildAdded:Connect(function(Tool)
	 Pos = LocalPlayer.Character.HumanoidRootPart.CFrame
			 if not antitool then return false end 
			 if Tool:IsA'Tool' and table.find(ToolsOwned, Tool) == nil then 
				 pcall(function()
				 LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
				 LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
				 repeat heartbeat() until Tool.Parent == LocalPlayer.Character;
				 prepfortool()
				 LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
				 LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
				 table.insert(ToolsOwned, Tool)
				 end)
			 end 
		 end)
end)

AddCommand("mvoid",function()
    getgenv().Options = {
    ["Main"] = {
        ["Target"] = args[2],
        ["LineForce"] = true,
        ["Loop"] = false,
    },
    ["Settings"] = {
        ["Distance"] = -10000,
        ["Mode"] = "l",
        ["wait"] = false,
        ["UseGrip"] = true,
    },
} -- Modes: N (Normal) / L (Leg) / R (All) / F (Fat) / FR (Fast Rescale)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

--//FR
local function Rescale()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local function wipe_parts()for _,part in pairs(character:GetDescendants())do if part:IsA("BasePart")and part.Name~="Head"then for _,attachment in pairs(part:GetDescendants())do if attachment:IsA("Attachment")and attachment:FindFirstChild("OriginalPosition")then attachment.OriginalPosition:Destroy()end end;part:WaitForChild("OriginalSize"):Destroy()end end end;wipe_parts()Humanoid:WaitForChild("BodyTypeScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyWidthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyDepthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("HeadScale"):Destroy()if Character.RightFoot:FindFirstChild("OriginalSize")then Character:WaitForChild("RightFoot").OriginalSize:Destroy()Character:WaitForChild("RightLowerLeg").OriginalSize:Destroy()Character:WaitForChild("RightUpperLeg").OriginalSize:Destroy()end end
--//Fat
local function Fat()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;function delete()Character:WaitForChild("LeftFoot"):WaitForChild'OriginalSize':Destroy()end;local function makeNew()local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftFoot"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftLowerLeg"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftUpperLeg"))thing.Name='OriginalSize'end;if Humanoid.RigType==Enum.HumanoidRigType.R15 then for i,v in next,Humanoid:GetChildren()do if v:IsA'NumberValue'then delete()v:Destroy()makeNew()end end else print("Error:",'Command is R15 only!')end end
--//Head
local function Head()Humanoid:SetStateEnabled("Seated",false)Humanoid.Sit=true;for _,v in pairs(Humanoid:GetChildren())do if string.find(v.Name,"Scale")then RunService.Heartbeat:wait()Character:FindFirstChild("Head").OriginalSize:Destroy()v:Destroy()Character:FindFirstChild("Head"):WaitForChild("OriginalSize")end end end
--//Leg
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
--//Reall
local function reall()local Settings={Values={BodyTypeScale=true;BodyProportionScale=true;BodyWidthScale=true;BodyHeightScale=true;BodyDepthScale=true;HeadScale=true};OriginalSize=true;OriginalPosition=false}Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local WaitFunc=function(x)x.DescendantAdded:wait()task.wait()end;if Humanoid.RigType==Enum.HumanoidRigType.R6 then return end;Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()Character.LeftFoot.LeftFootAttachment:Destroy()for _,x in next,Settings.Values do if x then if Settings.OriginalSize then for _,_os in next,Character:GetDescendants()do if _os.Name=="OriginalSize"and _os:IsA("ValueBase")then _os:Destroy()end end end;if Settings.OriginalPosition then for _,_op in next,Character:GetDescendants()do if _op.Name=="OriginalPosition"and _op:IsA("ValueBase")then _op:Destroy()end end end;if Humanoid:FindFirstChild(tostring(_))then Humanoid:FindFirstChild(tostring(_)):Destroy()end;WaitFunc(Character)end end end

local function Res()
    local Selected = getgenv().Options.Settings.Mode:lower()
    if Selected == "l" then
        Leg() wait(.5)
    elseif Selected == "h" then
        Head() wait(.2)
    elseif Selected == "r" then
        reall()
    elseif Selected == "f" then
        Fat() wait(.2)
    elseif Selected == "fr" then
        Rescale() wait(.2)
    end
end

local function Destroy()
    local Attachment0 = Instance.new("Attachment", Character:WaitForChild("UpperTorso"))
    local Attachment1 = Instance.new("Attachment", Character:WaitForChild("RightHand"))
    local ol = Instance.new("HingeConstraint", Character:WaitForChild("UpperTorso"))
    ol.Attachment0 = Attachment0
    ol.Attachment1 = Attachment1
    ol.LimitsEnabled = true
    ol.LowerAngle = 0
    ol.Restitution = 0
    ol.UpperAngle = 0
    Attachment1.CFrame = CFrame.new(0.5, 2, 1)
    Attachment0.CFrame = CFrame.new(0, 0, 0) 
end

local function GetPlayer(Name)
    Name = Name:lower():gsub(" ","") or ""
    for _,x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^"..Name) then
                return x
            elseif x.DisplayName:lower():match("^"..Name) then
                return x
            end
        end
    end
end

local Target = GetPlayer(getgenv().Options.Main.Target)
local TC = Target.Character
local TH = TC:WaitForChild("Humanoid")
local TP = TC:WaitForChild("HumanoidRootPart").CFrame
local Old = HRoot.CFrame
local Tools = {}

game.workspace.FallenPartsDestroyHeight = 0/0
if getgenv().Options.Settings.wait then
    local Char = Player.Character
    Player.Character = Clone
    Player.Character = Char
    wait(4.9)
end
Res()

HRoot.CFrame = TP
Character:SetPrimaryPartCFrame(TP)

local NewHum = Humanoid:Clone()
Humanoid:Destroy()
NewHum.Parent = Character

table.foreach(Player.Backpack:GetChildren(), function(_, x)
    x.Parent = Character
    if x:FindFirstChild("Handle") then
        table.insert(Tools, x)
    end
end)

if getgenv().Options.Settings.UseGrip then
    for _,v in pairs(Character:GetChildren()) do
        if v:IsA("Tool") then
            v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
        end
    end
end

Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")

HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 

HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))

local Mass = 0
for _,v in pairs(Character:GetDescendants()) do
    if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
end

if getgenv().Options.Main.LineForce then
    local PrimaryPart = Character.PrimaryPart
    local LineForce = Instance.new("LineForce", PrimaryPart) 
    local DestinationPart = Instance.new("Part", workspace)
    
    local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
    AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
    LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
    
    DestinationPart["Anchored"] = true
    LineForce["InverseSquareLaw"] = false 
    LineForce["ApplyAtCenterOfMass"] = true
    LineForce["Magnitude"] = 1e4
    LineForce["MaxForce"] = 1e2 + math.floor(Mass)
    LineForce["ReactionForceEnabled"] = false
    LineForce["Enabled"] = true
end
if getgenv().Options.Main.Loop then
    coroutine.wrap(function()
        for i = 1,5 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.2)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
else
    coroutine.wrap(function()
        for i = 1,2 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.1)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
end
for _,v in ipairs(Tools) do
    firetouchinterest(TH.RootPart, v.Handle, 0)
    firetouchinterest(TH.RootPart, v.Handle, 1)
end
Player.CharacterAdded:wait()
Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
Player.Character:WaitForChild("ForceField"):Destroy()

Player.CharacterAdded:Connect(function(character)
    wait(.8)
    if getgenv().Options.Main.Loop == true then
        local Target = GetPlayer(getgenv().Options.Main.Target)
        local TC = Target.Character
        local TH = TC:WaitForChild("Humanoid")
        local TP = TC:WaitForChild("HumanoidRootPart").CFrame
        Character = character
        Humanoid = Character:WaitForChild("Humanoid")
        HRoot = Humanoid.RootPart
        local Old = HRoot.CFrame
        local Tools2 = {}
        
        game.workspace.FallenPartsDestroyHeight = 0/0
        if getgenv().Options.Settings.wait then
            local Char = Player.Character
            Player.Character = Clone
            Player.Character = Char
            wait(4.9)
        end
        Res()
        
        HRoot.CFrame = TP
        Character:SetPrimaryPartCFrame(TP)
        
        local NewHum = Humanoid:Clone()
        Humanoid:Destroy()
        NewHum.Parent = Character
        
        table.foreach(Player.Backpack:GetChildren(), function(_, x)
            x.Parent = Character
            if x:FindFirstChild("Handle") then
                table.insert(Tools2, x)
            end
        end)
        
        if getgenv().Options.Settings.UseGrip then
            for _,v in pairs(Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
                end
            end
        end
        
        Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
        workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")
        
        HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 
        
        HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
        Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))
        
        local Mass = 0
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
        end
        
        if getgenv().Options.Main.LineForce then
            local PrimaryPart = Character.PrimaryPart
            local LineForce = Instance.new("LineForce", PrimaryPart) 
            local DestinationPart = Instance.new("Part", workspace)
            
            local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
            AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
            LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
            
            DestinationPart["Anchored"] = true
            LineForce["InverseSquareLaw"] = false 
            LineForce["ApplyAtCenterOfMass"] = true
            LineForce["Magnitude"] = 1e4
            LineForce["MaxForce"] = 1e2 + math.floor(Mass)
            LineForce["ReactionForceEnabled"] = false
            LineForce["Enabled"] = true
        end
        
        coroutine.wrap(function()
            for i = 1,1 do wait(.1) end
            workspace.FallenPartsDestroyHeight = -500
            task.wait(.1)
            if Target.Character:WaitForChild("Humanoid").Health > 0 then
                table.foreach(NewHum:GetAccessories(), function(_, x)
                    if x:FindFirstChild("Handle") then
                        x.Handle:Destroy()
                    end
                end)
                Character = Character:Destroy()
            end
        end)()
        for _,v in ipairs(Tools2) do
            firetouchinterest(TH.RootPart, v.Handle, 0)
            firetouchinterest(TH.RootPart, v.Handle, 1)
        end
        Player.CharacterAdded:wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
        Player.Character:WaitForChild("ForceField"):Destroy()
    end
end)
end)

AddCommand("lvoid",function()
    	for i, v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
		v:Stop()
		end
    
    local RemoveSeats = true
  local a = game.Players.LocalPlayer.Character.Animate
a:Destroy()
    
    if RemoveSeats then
    for _,x in next, workspace:GetDescendants() do
        if x:IsA("Seat") then
            x:Destroy()
        end
    end
end
    
    local t = args[2]

local ps = game:GetService('Players')

local touch = firetouchinterest

local cf = ps.LocalPlayer.Character.HumanoidRootPart.CFrame or chr.HumanoidRootPart.CFrame

local lp = ps.LocalPlayer or game.Players.LocalPlayer

local chr = lp.Character

local hum = chr.Humanoid:Clone()
    
local function delete()
    
chr.LeftFoot:WaitForChild'OriginalSize':Destroy()

chr.LeftLowerLeg:WaitForChild'OriginalSize':Destroy()
            
chr.LeftUpperLeg:WaitForChild'OriginalSize':Destroy()
        
end
        
chr.LeftLowerLeg.LeftKneeRigAttachment.OriginalPosition:Destroy()
        
chr.LeftUpperLeg.LeftKneeRigAttachment.OriginalPosition:Destroy()
        
chr.LeftLowerLeg:WaitForChild'LeftKneeRigAttachment':Destroy()

chr.LeftUpperLeg:WaitForChild'LeftKneeRigAttachment':Destroy()
        
for i,v in next, chr.Humanoid:GetChildren() do
    if v:IsA'NumberValue' then
        delete()
    v:Destroy()
    end
end

for _, v in next, ps:GetPlayers() do
    if v.Name:lower():sub(1, #t) == t:lower() or v.DisplayName:lower():sub(1, #t) == t then
        
        workspace.FallenPartsDestroyHeight = 0 / 0
        
        chr.Humanoid:Remove()
        
        hum.Parent = chr
        
        for i,x in pairs(lp.Backpack:GetChildren()) do
    
        if x:IsA('Tool') then
        
        chr.Humanoid:EquipTool(lp.Backpack:FindFirstChildOfClass('Tool'))
        
        ps.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new( 0, -499, 0))
    
        touch(x.Handle, v.Character.Head, 0)
        
        workspace.FallenPartsDestroyHeight = -506
        
            end
        end
    end
end

lp.CharacterAdded:Wait()

repeat task.wait() until chr

lp.Character:WaitForChild'HumanoidRootPart'.CFrame = cf
    game.Players.LocalPlayer.Character:WaitForChild'ForceField':Destroy()
end)

AddCommand("annoy",function()
        -- Made by IOC (@rqmane on roblox), Ping me if there are any issues. If you're going to use this, please give me credits
local Target = args[2] -- Can be DisplayName / Shorter DisplayName or Name / Shorter Name (example: local Target = "rq")

for I, V in pairs(game:service("Players"):GetPlayers()) do if V["Name"]:lower():sub(1, #Target) == Target:lower() or V["DisplayName"]:lower():sub(1, #Target) == Target:lower() then
      
-- Variables
local Client = game["Players"]["LocalPlayer"]
local ClientHRP = Client["Character"]:WaitForChild("HumanoidRootPart")
local TAH = V["Character"]:WaitForChild("HumanoidRootPart")

-- Function(s)
local Chat = function(X) game["ReplicatedStorage"]["DefaultChatSystemChatEvents"]["SayMessageRequest"]:FireServer(X, "All")
end

-- Main script
ClientHRP["CFrame"] = TAH["CFrame"] + TAH["CFrame"]["LookVector"] * 4 ClientHRP["CFrame"] = CFrame["new"](ClientHRP["CFrame"]["Position"], Vector3["new"](TAH["CFrame"]["Position"]["X"], ClientHRP["CFrame"]["Position"]["Y"], TAH["CFrame"]["Position"]["Z"])) wait(.3)
Chat('Hey, '..V["DisplayName"]); wait(1) Chat("I don't know how to tell you this but..."); wait(.7)
for I, V in pairs(Client["Backpack"]:GetChildren()) do
if V:IsA("Tool") then V["Parent"] = Client["Character"] V["Remote"]:FireServer("PlaySong", "7266001792") end
end
wait(.2) 
Chat("You are an idiot!"); wait(1) Chat("Hahahahaha!"); end 
end
end)

AddCommand("fclag",function()
    for i=1,3 do 
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("\0", "All")
end
end)

AddCommand("ckorblox",function()
local Client = game["Players"]["LocalPlayer"]

local Korblox = function()
Client["Character"]["RightLowerLeg"]["MeshId"] = "902942093"
Client["Character"]["RightFoot"]["MeshId"] = "902942089"

Client["Character"]["RightUpperLeg"]["MeshId"] = "http://www.roblox.com/asset/?id=902942096"
Client["Character"]["RightUpperLeg"]["TextureID"] = "http://roblox.com/asset/?id=902843398"

Client["Character"]["RightFoot"]["Transparency"] = "1"
Client["Character"]["RightLowerLeg"]["Transparency"] = "1"
end

local Headless = function()
Client["Character"]["Head"]["MeshId"] = 0
end
Korblox()
end)

AddCommand("cheadless",function()
    local Client = game["Players"]["LocalPlayer"]

local Korblox = function()
Client["Character"]["RightLowerLeg"]["MeshId"] = "902942093"
Client["Character"]["RightFoot"]["MeshId"] = "902942089"

Client["Character"]["RightUpperLeg"]["MeshId"] = "http://www.roblox.com/asset/?id=902942096"
Client["Character"]["RightUpperLeg"]["TextureID"] = "http://roblox.com/asset/?id=902843398"

Client["Character"]["RightFoot"]["Transparency"] = "1"
Client["Character"]["RightLowerLeg"]["Transparency"] = "1"
end

local Headless = function()
Client["Character"]["Head"]["MeshId"] = 0
end
Headless()
end)

AddCommand("fov",function()
    local fov = args[2]
    game:GetService("Workspace").CurrentCamera.FieldOfView = fov
end)

AddCommand("void2",function()
    getgenv().Options = {
    ["Main"] = {
        ["Target"] = args[2],
        ["LineForce"] = true,
        ["Loop"] = false,
    },
    ["Settings"] = {
        ["Distance"] = -10000,
        ["Mode"] = "n",
        ["wait"] = true,
        ["UseGrip"] = true,
    },
} -- Modes: N (Normal) / L (Leg) / R (All) / F (Fat) / FR (Fast Rescale)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

--//FR
local function Rescale()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local function wipe_parts()for _,part in pairs(character:GetDescendants())do if part:IsA("BasePart")and part.Name~="Head"then for _,attachment in pairs(part:GetDescendants())do if attachment:IsA("Attachment")and attachment:FindFirstChild("OriginalPosition")then attachment.OriginalPosition:Destroy()end end;part:WaitForChild("OriginalSize"):Destroy()end end end;wipe_parts()Humanoid:WaitForChild("BodyTypeScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyWidthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyDepthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("HeadScale"):Destroy()if Character.RightFoot:FindFirstChild("OriginalSize")then Character:WaitForChild("RightFoot").OriginalSize:Destroy()Character:WaitForChild("RightLowerLeg").OriginalSize:Destroy()Character:WaitForChild("RightUpperLeg").OriginalSize:Destroy()end end
--//Fat
local function Fat()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;function delete()Character:WaitForChild("LeftFoot"):WaitForChild'OriginalSize':Destroy()end;local function makeNew()local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftFoot"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftLowerLeg"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftUpperLeg"))thing.Name='OriginalSize'end;if Humanoid.RigType==Enum.HumanoidRigType.R15 then for i,v in next,Humanoid:GetChildren()do if v:IsA'NumberValue'then delete()v:Destroy()makeNew()end end else print("Error:",'Command is R15 only!')end end
--//Head
local function Head()Humanoid:SetStateEnabled("Seated",false)Humanoid.Sit=true;for _,v in pairs(Humanoid:GetChildren())do if string.find(v.Name,"Scale")then RunService.Heartbeat:wait()Character:FindFirstChild("Head").OriginalSize:Destroy()v:Destroy()Character:FindFirstChild("Head"):WaitForChild("OriginalSize")end end end
--//Leg
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
--//Reall
local function reall()local Settings={Values={BodyTypeScale=true;BodyProportionScale=true;BodyWidthScale=true;BodyHeightScale=true;BodyDepthScale=true;HeadScale=true};OriginalSize=true;OriginalPosition=false}Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local WaitFunc=function(x)x.DescendantAdded:wait()task.wait()end;if Humanoid.RigType==Enum.HumanoidRigType.R6 then return end;Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()Character.LeftFoot.LeftFootAttachment:Destroy()for _,x in next,Settings.Values do if x then if Settings.OriginalSize then for _,_os in next,Character:GetDescendants()do if _os.Name=="OriginalSize"and _os:IsA("ValueBase")then _os:Destroy()end end end;if Settings.OriginalPosition then for _,_op in next,Character:GetDescendants()do if _op.Name=="OriginalPosition"and _op:IsA("ValueBase")then _op:Destroy()end end end;if Humanoid:FindFirstChild(tostring(_))then Humanoid:FindFirstChild(tostring(_)):Destroy()end;WaitFunc(Character)end end end

local function Res()
    local Selected = getgenv().Options.Settings.Mode:lower()
    if Selected == "l" then
        Leg() wait(.5)
    elseif Selected == "h" then
        Head() wait(.2)
    elseif Selected == "r" then
        reall()
    elseif Selected == "f" then
        Fat() wait(.2)
    elseif Selected == "fr" then
        Rescale() wait(.2)
    end
end

local function Destroy()
    local Attachment0 = Instance.new("Attachment", Character:WaitForChild("UpperTorso"))
    local Attachment1 = Instance.new("Attachment", Character:WaitForChild("RightHand"))
    local ol = Instance.new("HingeConstraint", Character:WaitForChild("UpperTorso"))
    ol.Attachment0 = Attachment0
    ol.Attachment1 = Attachment1
    ol.LimitsEnabled = true
    ol.LowerAngle = 0
    ol.Restitution = 0
    ol.UpperAngle = 0
    Attachment1.CFrame = CFrame.new(0.5, 2, 1)
    Attachment0.CFrame = CFrame.new(0, 0, 0) 
end

local function GetPlayer(Name)
    Name = Name:lower():gsub(" ","") or ""
    for _,x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^"..Name) then
                return x
            elseif x.DisplayName:lower():match("^"..Name) then
                return x
            end
        end
    end
end

local Target = GetPlayer(getgenv().Options.Main.Target)
local TC = Target.Character
local TH = TC:WaitForChild("Humanoid")
local TP = TC:WaitForChild("HumanoidRootPart").CFrame
local Old = HRoot.CFrame
local Tools = {}

game.workspace.FallenPartsDestroyHeight = 0/0
if getgenv().Options.Settings.wait then
    local Char = Player.Character
    Player.Character = Clone
    Player.Character = Char
    wait(4.9)
end
Res()

HRoot.CFrame = TP
Character:SetPrimaryPartCFrame(TP)

local NewHum = Humanoid:Clone()
Humanoid:Destroy()
NewHum.Parent = Character

table.foreach(Player.Backpack:GetChildren(), function(_, x)
    x.Parent = Character
    if x:FindFirstChild("Handle") then
        table.insert(Tools, x)
    end
end)

if getgenv().Options.Settings.UseGrip then
    for _,v in pairs(Character:GetChildren()) do
        if v:IsA("Tool") then
            v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
        end
    end
end

Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")

HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 

HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))

local Mass = 0
for _,v in pairs(Character:GetDescendants()) do
    if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
end

if getgenv().Options.Main.LineForce then
    local PrimaryPart = Character.PrimaryPart
    local LineForce = Instance.new("LineForce", PrimaryPart) 
    local DestinationPart = Instance.new("Part", workspace)
    
    local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
    AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
    LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
    
    DestinationPart["Anchored"] = true
    LineForce["InverseSquareLaw"] = false 
    LineForce["ApplyAtCenterOfMass"] = true
    LineForce["Magnitude"] = 1e4
    LineForce["MaxForce"] = 1e2 + math.floor(Mass)
    LineForce["ReactionForceEnabled"] = false
    LineForce["Enabled"] = true
end
if getgenv().Options.Main.Loop then
    coroutine.wrap(function()
        for i = 1,5 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.2)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
else
    coroutine.wrap(function()
        for i = 1,2 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.1)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
end
for _,v in ipairs(Tools) do
    firetouchinterest(TH.RootPart, v.Handle, 0)
    firetouchinterest(TH.RootPart, v.Handle, 1)
end
Player.CharacterAdded:wait()
Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
Player.Character:WaitForChild("ForceField"):Destroy()

Player.CharacterAdded:Connect(function(character)
    wait(.8)
    if getgenv().Options.Main.Loop == true then
        local Target = GetPlayer(getgenv().Options.Main.Target)
        local TC = Target.Character
        local TH = TC:WaitForChild("Humanoid")
        local TP = TC:WaitForChild("HumanoidRootPart").CFrame
        Character = character
        Humanoid = Character:WaitForChild("Humanoid")
        HRoot = Humanoid.RootPart
        local Old = HRoot.CFrame
        local Tools2 = {}
        
        game.workspace.FallenPartsDestroyHeight = 0/0
        if getgenv().Options.Settings.wait then
            local Char = Player.Character
            Player.Character = Clone
            Player.Character = Char
            wait(4.9)
        end
        Res()
        
        HRoot.CFrame = TP
        Character:SetPrimaryPartCFrame(TP)
        
        local NewHum = Humanoid:Clone()
        Humanoid:Destroy()
        NewHum.Parent = Character
        
        table.foreach(Player.Backpack:GetChildren(), function(_, x)
            x.Parent = Character
            if x:FindFirstChild("Handle") then
                table.insert(Tools2, x)
            end
        end)
        
        if getgenv().Options.Settings.UseGrip then
            for _,v in pairs(Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
                end
            end
        end
        
        Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
        workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")
        
        HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 
        
        HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
        Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))
        
        local Mass = 0
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
        end
        
        if getgenv().Options.Main.LineForce then
            local PrimaryPart = Character.PrimaryPart
            local LineForce = Instance.new("LineForce", PrimaryPart) 
            local DestinationPart = Instance.new("Part", workspace)
            
            local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
            AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
            LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
            
            DestinationPart["Anchored"] = true
            LineForce["InverseSquareLaw"] = false 
            LineForce["ApplyAtCenterOfMass"] = true
            LineForce["Magnitude"] = 1e4
            LineForce["MaxForce"] = 1e2 + math.floor(Mass)
            LineForce["ReactionForceEnabled"] = false
            LineForce["Enabled"] = true
        end
        
        coroutine.wrap(function()
            for i = 1,1 do wait(.1) end
            workspace.FallenPartsDestroyHeight = -500
            task.wait(.1)
            if Target.Character:WaitForChild("Humanoid").Health > 0 then
                table.foreach(NewHum:GetAccessories(), function(_, x)
                    if x:FindFirstChild("Handle") then
                        x.Handle:Destroy()
                    end
                end)
                Character = Character:Destroy()
            end
        end)()
        for _,v in ipairs(Tools2) do
            firetouchinterest(TH.RootPart, v.Handle, 0)
            firetouchinterest(TH.RootPart, v.Handle, 1)
        end
        Player.CharacterAdded:wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
        Player.Character:WaitForChild("ForceField"):Destroy()
    end
end)
end)

AddCommand("loopvoid",function()
    _G.LULU = true--change to true or false
while _G.LULU do
wait()
    getgenv().Options = {
    ["Main"] = {
        ["Target"] = args[2],
        ["LineForce"] = false,
        ["Loop"] = false,
    },
    ["Settings"] = {
        ["Distance"] = -10000,
        ["Mode"] = "l",
        ["wait"] = false,
        ["UseGrip"] = true,
    },
} -- Modes: N (Normal) / L (Leg) / R (All) / F (Fat) / FR (Fast Rescale)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

--//FR
local function Rescale()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local function wipe_parts()for _,part in pairs(character:GetDescendants())do if part:IsA("BasePart")and part.Name~="Head"then for _,attachment in pairs(part:GetDescendants())do if attachment:IsA("Attachment")and attachment:FindFirstChild("OriginalPosition")then attachment.OriginalPosition:Destroy()end end;part:WaitForChild("OriginalSize"):Destroy()end end end;wipe_parts()Humanoid:WaitForChild("BodyTypeScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyWidthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyDepthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("HeadScale"):Destroy()if Character.RightFoot:FindFirstChild("OriginalSize")then Character:WaitForChild("RightFoot").OriginalSize:Destroy()Character:WaitForChild("RightLowerLeg").OriginalSize:Destroy()Character:WaitForChild("RightUpperLeg").OriginalSize:Destroy()end end
--//Fat
local function Fat()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;function delete()Character:WaitForChild("LeftFoot"):WaitForChild'OriginalSize':Destroy()end;local function makeNew()local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftFoot"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftLowerLeg"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftUpperLeg"))thing.Name='OriginalSize'end;if Humanoid.RigType==Enum.HumanoidRigType.R15 then for i,v in next,Humanoid:GetChildren()do if v:IsA'NumberValue'then delete()v:Destroy()makeNew()end end else print("Error:",'Command is R15 only!')end end
--//Head
local function Head()Humanoid:SetStateEnabled("Seated",false)Humanoid.Sit=true;for _,v in pairs(Humanoid:GetChildren())do if string.find(v.Name,"Scale")then RunService.Heartbeat:wait()Character:FindFirstChild("Head").OriginalSize:Destroy()v:Destroy()Character:FindFirstChild("Head"):WaitForChild("OriginalSize")end end end
--//Leg
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
--//Reall
local function reall()local Settings={Values={BodyTypeScale=true;BodyProportionScale=true;BodyWidthScale=true;BodyHeightScale=true;BodyDepthScale=true;HeadScale=true};OriginalSize=true;OriginalPosition=false}Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local WaitFunc=function(x)x.DescendantAdded:wait()task.wait()end;if Humanoid.RigType==Enum.HumanoidRigType.R6 then return end;Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()Character.LeftFoot.LeftFootAttachment:Destroy()for _,x in next,Settings.Values do if x then if Settings.OriginalSize then for _,_os in next,Character:GetDescendants()do if _os.Name=="OriginalSize"and _os:IsA("ValueBase")then _os:Destroy()end end end;if Settings.OriginalPosition then for _,_op in next,Character:GetDescendants()do if _op.Name=="OriginalPosition"and _op:IsA("ValueBase")then _op:Destroy()end end end;if Humanoid:FindFirstChild(tostring(_))then Humanoid:FindFirstChild(tostring(_)):Destroy()end;WaitFunc(Character)end end end

local function Res()
    local Selected = getgenv().Options.Settings.Mode:lower()
    if Selected == "l" then
        Leg() wait(.5)
    elseif Selected == "h" then
        Head() wait(.2)
    elseif Selected == "r" then
        reall()
    elseif Selected == "f" then
        Fat() wait(.2)
    elseif Selected == "fr" then
        Rescale() wait(.2)
    end
end

local function Destroy()
    local Attachment0 = Instance.new("Attachment", Character:WaitForChild("UpperTorso"))
    local Attachment1 = Instance.new("Attachment", Character:WaitForChild("RightHand"))
    local ol = Instance.new("HingeConstraint", Character:WaitForChild("UpperTorso"))
    ol.Attachment0 = Attachment0
    ol.Attachment1 = Attachment1
    ol.LimitsEnabled = true
    ol.LowerAngle = 0
    ol.Restitution = 0
    ol.UpperAngle = 0
    Attachment1.CFrame = CFrame.new(0.5, 2, 1)
    Attachment0.CFrame = CFrame.new(0, 0, 0) 
end

local function GetPlayer(Name)
    Name = Name:lower():gsub(" ","") or ""
    for _,x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^"..Name) then
                return x
            elseif x.DisplayName:lower():match("^"..Name) then
                return x
            end
        end
    end
end

local Target = GetPlayer(getgenv().Options.Main.Target)
local TC = Target.Character
local TH = TC:WaitForChild("Humanoid")
local TP = TC:WaitForChild("HumanoidRootPart").CFrame
local Old = HRoot.CFrame
local Tools = {}

game.workspace.FallenPartsDestroyHeight = 0/0
if getgenv().Options.Settings.wait then
    local Char = Player.Character
    Player.Character = Clone
    Player.Character = Char
    wait(4.9)
end
Res()

HRoot.CFrame = TP
Character:SetPrimaryPartCFrame(TP)

local NewHum = Humanoid:Clone()
Humanoid:Destroy()
NewHum.Parent = Character

table.foreach(Player.Backpack:GetChildren(), function(_, x)
    x.Parent = Character
    if x:FindFirstChild("Handle") then
        table.insert(Tools, x)
    end
end)

if getgenv().Options.Settings.UseGrip then
    for _,v in pairs(Character:GetChildren()) do
        if v:IsA("Tool") then
            v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
        end
    end
end

Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")

HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 

HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))

local Mass = 0
for _,v in pairs(Character:GetDescendants()) do
    if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
end

if getgenv().Options.Main.LineForce then
    local PrimaryPart = Character.PrimaryPart
    local LineForce = Instance.new("LineForce", PrimaryPart) 
    local DestinationPart = Instance.new("Part", workspace)
    
    local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
    AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
    LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
    
    DestinationPart["Anchored"] = true
    LineForce["InverseSquareLaw"] = false 
    LineForce["ApplyAtCenterOfMass"] = true
    LineForce["Magnitude"] = 1e4
    LineForce["MaxForce"] = 1e2 + math.floor(Mass)
    LineForce["ReactionForceEnabled"] = false
    LineForce["Enabled"] = true
end
if getgenv().Options.Main.Loop then
    coroutine.wrap(function()
        for i = 1,5 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.2)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
else
    coroutine.wrap(function()
        for i = 1,2 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.1)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
end
for _,v in ipairs(Tools) do
    firetouchinterest(TH.RootPart, v.Handle, 0)
    firetouchinterest(TH.RootPart, v.Handle, 1)
end
Player.CharacterAdded:wait()
Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
Player.Character:WaitForChild("ForceField"):Destroy()

Player.CharacterAdded:Connect(function(character)
    wait(.8)
    if getgenv().Options.Main.Loop == true then
        local Target = GetPlayer(getgenv().Options.Main.Target)
        local TC = Target.Character
        local TH = TC:WaitForChild("Humanoid")
        local TP = TC:WaitForChild("HumanoidRootPart").CFrame
        Character = character
        Humanoid = Character:WaitForChild("Humanoid")
        HRoot = Humanoid.RootPart
        local Old = HRoot.CFrame
        local Tools2 = {}
        
        game.workspace.FallenPartsDestroyHeight = 0/0
        if getgenv().Options.Settings.wait then
            local Char = Player.Character
            Player.Character = Clone
            Player.Character = Char
            wait(4.9)
        end
        Res()
        
        HRoot.CFrame = TP
        Character:SetPrimaryPartCFrame(TP)
        
        local NewHum = Humanoid:Clone()
        Humanoid:Destroy()
        NewHum.Parent = Character
        
        table.foreach(Player.Backpack:GetChildren(), function(_, x)
            x.Parent = Character
            if x:FindFirstChild("Handle") then
                table.insert(Tools2, x)
            end
        end)
        
        if getgenv().Options.Settings.UseGrip then
            for _,v in pairs(Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
                end
            end
        end
        
        Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
        workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")
        
        HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 
        
        HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
        Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))
        
        local Mass = 0
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
        end
        
        if getgenv().Options.Main.LineForce then
            local PrimaryPart = Character.PrimaryPart
            local LineForce = Instance.new("LineForce", PrimaryPart) 
            local DestinationPart = Instance.new("Part", workspace)
            
            local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
            AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
            LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
            
            DestinationPart["Anchored"] = true
            LineForce["InverseSquareLaw"] = false 
            LineForce["ApplyAtCenterOfMass"] = true
            LineForce["Magnitude"] = 1e4
            LineForce["MaxForce"] = 1e2 + math.floor(Mass)
            LineForce["ReactionForceEnabled"] = false
            LineForce["Enabled"] = true
        end
        
        coroutine.wrap(function()
            for i = 1,1 do wait(.1) end
            workspace.FallenPartsDestroyHeight = -500
            task.wait(.1)
            if Target.Character:WaitForChild("Humanoid").Health > 0 then
                table.foreach(NewHum:GetAccessories(), function(_, x)
                    if x:FindFirstChild("Handle") then
                        x.Handle:Destroy()
                    end
                end)
                Character = Character:Destroy()
            end
        end)()
        for _,v in ipairs(Tools2) do
            firetouchinterest(TH.RootPart, v.Handle, 0)
            firetouchinterest(TH.RootPart, v.Handle, 1)
        end
        Player.CharacterAdded:wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
        Player.Character:WaitForChild("ForceField"):Destroy()
    end
end)
end
end)

AddCommand("unloopvoid",function()
    _G.LULU = false--change to true or false
while _G.LULU do
wait()
    getgenv().Options = {
    ["Main"] = {
        ["Target"] = args[2],
        ["LineForce"] = false,
        ["Loop"] = false,
    },
    ["Settings"] = {
        ["Distance"] = -10000,
        ["Mode"] = "l",
        ["wait"] = false,
        ["UseGrip"] = true,
    },
} -- Modes: N (Normal) / L (Leg) / R (All) / F (Fat) / FR (Fast Rescale)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local HRoot = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

--//FR
local function Rescale()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local function wipe_parts()for _,part in pairs(character:GetDescendants())do if part:IsA("BasePart")and part.Name~="Head"then for _,attachment in pairs(part:GetDescendants())do if attachment:IsA("Attachment")and attachment:FindFirstChild("OriginalPosition")then attachment.OriginalPosition:Destroy()end end;part:WaitForChild("OriginalSize"):Destroy()end end end;wipe_parts()Humanoid:WaitForChild("BodyTypeScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyWidthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("BodyDepthScale"):Destroy()wipe_parts()Humanoid:WaitForChild("HeadScale"):Destroy()if Character.RightFoot:FindFirstChild("OriginalSize")then Character:WaitForChild("RightFoot").OriginalSize:Destroy()Character:WaitForChild("RightLowerLeg").OriginalSize:Destroy()Character:WaitForChild("RightUpperLeg").OriginalSize:Destroy()end end
--//Fat
local function Fat()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;function delete()Character:WaitForChild("LeftFoot"):WaitForChild'OriginalSize':Destroy()end;local function makeNew()local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftFoot"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftLowerLeg"))thing.Name='OriginalSize'local thing=Instance.new('Vector3Value',Character:WaitForChild("LeftUpperLeg"))thing.Name='OriginalSize'end;if Humanoid.RigType==Enum.HumanoidRigType.R15 then for i,v in next,Humanoid:GetChildren()do if v:IsA'NumberValue'then delete()v:Destroy()makeNew()end end else print("Error:",'Command is R15 only!')end end
--//Head
local function Head()Humanoid:SetStateEnabled("Seated",false)Humanoid.Sit=true;for _,v in pairs(Humanoid:GetChildren())do if string.find(v.Name,"Scale")then RunService.Heartbeat:wait()Character:FindFirstChild("Head").OriginalSize:Destroy()v:Destroy()Character:FindFirstChild("Head"):WaitForChild("OriginalSize")end end end
--//Leg
local function Leg()Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false) Humanoid.Sit = true local character = Character;character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):WaitForChild("OriginalPosition"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("LeftKneeRigAttachment"):Destroy()character:WaitForChild("LeftFoot"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftLowerLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("LeftUpperLeg"):WaitForChild("OriginalSize"):Destroy()character:WaitForChild("Humanoid"):WaitForChild("BodyTypeScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyProportionScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyWidthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyHeightScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("BodyDepthScale"):Destroy()character.LeftFoot:WaitForChild("OriginalSize"):Destroy()character.LeftLowerLeg:WaitForChild("OriginalSize"):Destroy()character.LeftUpperLeg:WaitForChild("OriginalSize"):Destroy()character.Humanoid:WaitForChild("HeadScale"):Destroy() end
--//Reall
local function reall()local Settings={Values={BodyTypeScale=true;BodyProportionScale=true;BodyWidthScale=true;BodyHeightScale=true;BodyDepthScale=true;HeadScale=true};OriginalSize=true;OriginalPosition=false}Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)Humanoid.Sit=true;local WaitFunc=function(x)x.DescendantAdded:wait()task.wait()end;if Humanoid.RigType==Enum.HumanoidRigType.R6 then return end;Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy()Character.LeftLowerLeg.LeftAnkleRigAttachment:Destroy()Character.LeftFoot.LeftFootAttachment:Destroy()for _,x in next,Settings.Values do if x then if Settings.OriginalSize then for _,_os in next,Character:GetDescendants()do if _os.Name=="OriginalSize"and _os:IsA("ValueBase")then _os:Destroy()end end end;if Settings.OriginalPosition then for _,_op in next,Character:GetDescendants()do if _op.Name=="OriginalPosition"and _op:IsA("ValueBase")then _op:Destroy()end end end;if Humanoid:FindFirstChild(tostring(_))then Humanoid:FindFirstChild(tostring(_)):Destroy()end;WaitFunc(Character)end end end

local function Res()
    local Selected = getgenv().Options.Settings.Mode:lower()
    if Selected == "l" then
        Leg() wait(.5)
    elseif Selected == "h" then
        Head() wait(.2)
    elseif Selected == "r" then
        reall()
    elseif Selected == "f" then
        Fat() wait(.2)
    elseif Selected == "fr" then
        Rescale() wait(.2)
    end
end

local function Destroy()
    local Attachment0 = Instance.new("Attachment", Character:WaitForChild("UpperTorso"))
    local Attachment1 = Instance.new("Attachment", Character:WaitForChild("RightHand"))
    local ol = Instance.new("HingeConstraint", Character:WaitForChild("UpperTorso"))
    ol.Attachment0 = Attachment0
    ol.Attachment1 = Attachment1
    ol.LimitsEnabled = true
    ol.LowerAngle = 0
    ol.Restitution = 0
    ol.UpperAngle = 0
    Attachment1.CFrame = CFrame.new(0.5, 2, 1)
    Attachment0.CFrame = CFrame.new(0, 0, 0) 
end

local function GetPlayer(Name)
    Name = Name:lower():gsub(" ","") or ""
    for _,x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^"..Name) then
                return x
            elseif x.DisplayName:lower():match("^"..Name) then
                return x
            end
        end
    end
end

local Target = GetPlayer(getgenv().Options.Main.Target)
local TC = Target.Character
local TH = TC:WaitForChild("Humanoid")
local TP = TC:WaitForChild("HumanoidRootPart").CFrame
local Old = HRoot.CFrame
local Tools = {}

game.workspace.FallenPartsDestroyHeight = 0/0
if getgenv().Options.Settings.wait then
    local Char = Player.Character
    Player.Character = Clone
    Player.Character = Char
    wait(4.9)
end
Res()

HRoot.CFrame = TP
Character:SetPrimaryPartCFrame(TP)

local NewHum = Humanoid:Clone()
Humanoid:Destroy()
NewHum.Parent = Character

table.foreach(Player.Backpack:GetChildren(), function(_, x)
    x.Parent = Character
    if x:FindFirstChild("Handle") then
        table.insert(Tools, x)
    end
end)

if getgenv().Options.Settings.UseGrip then
    for _,v in pairs(Character:GetChildren()) do
        if v:IsA("Tool") then
            v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
        end
    end
end

Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")

HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 

HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))

local Mass = 0
for _,v in pairs(Character:GetDescendants()) do
    if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
end

if getgenv().Options.Main.LineForce then
    local PrimaryPart = Character.PrimaryPart
    local LineForce = Instance.new("LineForce", PrimaryPart) 
    local DestinationPart = Instance.new("Part", workspace)
    
    local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
    AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
    LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
    
    DestinationPart["Anchored"] = true
    LineForce["InverseSquareLaw"] = false 
    LineForce["ApplyAtCenterOfMass"] = true
    LineForce["Magnitude"] = 1e4
    LineForce["MaxForce"] = 1e2 + math.floor(Mass)
    LineForce["ReactionForceEnabled"] = false
    LineForce["Enabled"] = true
end
if getgenv().Options.Main.Loop then
    coroutine.wrap(function()
        for i = 1,5 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.2)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
else
    coroutine.wrap(function()
        for i = 1,2 do wait() end
        workspace.FallenPartsDestroyHeight = -500
        wait(.1)
        if Target.Character:WaitForChild("Humanoid").Health > 0 then
            table.foreach(NewHum:GetAccessories(), function(_, x)
                if x:FindFirstChild("Handle") then
                    x.Handle:Destroy()
                end
            end)
            Character = Character:Destroy()
        end
    end)()
end
for _,v in ipairs(Tools) do
    firetouchinterest(TH.RootPart, v.Handle, 0)
    firetouchinterest(TH.RootPart, v.Handle, 1)
end
Player.CharacterAdded:wait()
Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
Player.Character:WaitForChild("ForceField"):Destroy()

Player.CharacterAdded:Connect(function(character)
    wait(.8)
    if getgenv().Options.Main.Loop == true then
        local Target = GetPlayer(getgenv().Options.Main.Target)
        local TC = Target.Character
        local TH = TC:WaitForChild("Humanoid")
        local TP = TC:WaitForChild("HumanoidRootPart").CFrame
        Character = character
        Humanoid = Character:WaitForChild("Humanoid")
        HRoot = Humanoid.RootPart
        local Old = HRoot.CFrame
        local Tools2 = {}
        
        game.workspace.FallenPartsDestroyHeight = 0/0
        if getgenv().Options.Settings.wait then
            local Char = Player.Character
            Player.Character = Clone
            Player.Character = Char
            wait(4.9)
        end
        Res()
        
        HRoot.CFrame = TP
        Character:SetPrimaryPartCFrame(TP)
        
        local NewHum = Humanoid:Clone()
        Humanoid:Destroy()
        NewHum.Parent = Character
        
        table.foreach(Player.Backpack:GetChildren(), function(_, x)
            x.Parent = Character
            if x:FindFirstChild("Handle") then
                table.insert(Tools2, x)
            end
        end)
        
        if getgenv().Options.Settings.UseGrip then
            for _,v in pairs(Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.GripPos = Vector3.new(0, game.workspace.FallenPartsDestroyHeight + 100, 0)
                end
            end
        end
        
        Character:WaitForChild("Humanoid"):SetStateEnabled("FallingDown", false)
        workspace.CurrentCamera.CameraSubject = Target.Character:WaitForChild("Humanoid")
        
        HRoot.AssemblyLinearVelocity = HRoot.AssemblyLinearVelocity + Vector3.new(0,getgenv().Options.Settings.Distance,0) 
        
        HRoot.CFrame = CFrame.new(0, getgenv().Options.Settings.Distance, 0)
        Character:SetPrimaryPartCFrame(CFrame.new(0, getgenv().Options.Settings.Distance, 0))
        
        local Mass = 0
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then Mass = Mass + v.AssemblyMass end
        end
        
        if getgenv().Options.Main.LineForce then
            local PrimaryPart = Character.PrimaryPart
            local LineForce = Instance.new("LineForce", PrimaryPart) 
            local DestinationPart = Instance.new("Part", workspace)
            
            local AT0, AT1 = Instance.new("Attachment", PrimaryPart), Instance.new("Attachment", DestinationPart)
            AT0["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0); AT1["Position"] = Vector3.new(0, getgenv().Options.Settings.Distance, 0) 
            LineForce["Attachment0"] = AT0; LineForce["Attachment1"] = AT1;
            
            DestinationPart["Anchored"] = true
            LineForce["InverseSquareLaw"] = false 
            LineForce["ApplyAtCenterOfMass"] = true
            LineForce["Magnitude"] = 1e4
            LineForce["MaxForce"] = 1e2 + math.floor(Mass)
            LineForce["ReactionForceEnabled"] = false
            LineForce["Enabled"] = true
        end
        
        coroutine.wrap(function()
            for i = 1,1 do wait(.1) end
            workspace.FallenPartsDestroyHeight = -500
            task.wait(.1)
            if Target.Character:WaitForChild("Humanoid").Health > 0 then
                table.foreach(NewHum:GetAccessories(), function(_, x)
                    if x:FindFirstChild("Handle") then
                        x.Handle:Destroy()
                    end
                end)
                Character = Character:Destroy()
            end
        end)()
        for _,v in ipairs(Tools2) do
            firetouchinterest(TH.RootPart, v.Handle, 0)
            firetouchinterest(TH.RootPart, v.Handle, 1)
        end
        Player.CharacterAdded:wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame = Old
        Player.Character:WaitForChild("ForceField"):Destroy()
    end
end)
end
end)

